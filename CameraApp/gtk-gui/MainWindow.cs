
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Fixed mainLayout;

	private global::Gtk.Notebook mainNoteBook;

	private global::Gtk.Fixed cameraLayout;

	private global::Gtk.EventBox cameraImageEvent;

	private global::Gtk.Image cameraImage;

	private global::Gtk.Button grabButton;

	private global::Gtk.Button stopButton;

	private global::Gtk.Button restartButton;

	private global::Gtk.Button clearButton;

	private global::Gtk.ToggleButton ellipseBoxToggle;

	private global::Gtk.Fixed editRegionLayout;

	private global::Gtk.HScale widthScale;

	private global::Gtk.Label regionWidthLabel;

	private global::Gtk.Label scaleHeightLabel;

	private global::Gtk.HScale heightScale;

	private global::Gtk.SpinButton widthScaleNumeric;

	private global::Gtk.SpinButton heightScaleNumeric;

	private global::Gtk.Label ResizeLabel;

	private global::Gtk.Label MoveLabel;

	private global::Gtk.Label dxLabel;

	private global::Gtk.HScale dxScale;

	private global::Gtk.SpinButton dxScaleNumeric;

	private global::Gtk.Label dyLabel;

	private global::Gtk.HScale dyScale;

	private global::Gtk.SpinButton dyScaleNumeric;

	private global::Gtk.Button closeEditButton;

	private global::Gtk.CheckButton regionEnabled;

	private global::Gtk.Button saveButton;

	private global::Gtk.CheckButton cameraFlipX;

	private global::Gtk.CheckButton cameraFlipY;

	private global::Gtk.Label cameraLabel;

	private global::Gtk.Fixed patternLayout;

	private global::Gtk.HScale patternScaleX;

	private global::Gtk.HScale patternScaleY;

	private global::Gtk.Label patternScaleXLabel;

	private global::Gtk.Label patternScaleYLabel;

	private global::Gtk.Button resetScaleButton;

	private global::Gtk.SpinButton patternScaleXNumeric;

	private global::Gtk.SpinButton patternScaleYNumeric;

	private global::Gtk.Label patternOffsetXLabel;

	private global::Gtk.HScale patternOffsetX;

	private global::Gtk.Label patternOffsetYLabel;

	private global::Gtk.HScale patternOffsetY;

	private global::Gtk.SpinButton patternOffsetYNumeric;

	private global::Gtk.SpinButton patternOffsetXNumeric;

	private global::Gtk.Button resetOffsetButton;

	private global::Gtk.Label grayLevelLabel;

	private global::Gtk.HScale grayLevelScale;

	private global::Gtk.SpinButton grayLevelNumeric;

	private global::Gtk.Label backgroundLevelLabel;

	private global::Gtk.HScale backgroundLevelScale;

	private global::Gtk.SpinButton backgroundLevelNumeric;

	private global::Gtk.CheckButton FlipX;

	private global::Gtk.CheckButton FlipY;

	private global::Gtk.CheckButton Invert;

	private global::Gtk.CheckButton patternPreviewMode;

	private global::Gtk.Notebook patternNotebook;

	private global::Gtk.Fixed crossLayout;

	private global::Gtk.CheckButton Cross;

	private global::Gtk.CheckButton Plus;

	private global::Gtk.Label patternCrossLabel;

	private global::Gtk.Fixed gratingLayout;

	private global::Gtk.Label gratingConfigurationLabel;

	private global::Gtk.CheckButton Grating;

	private global::Gtk.CheckButton TL;

	private global::Gtk.CheckButton TR;

	private global::Gtk.CheckButton BL;

	private global::Gtk.CheckButton BR;

	private global::Gtk.SpinButton PeriodX;

	private global::Gtk.SpinButton PeriodY;

	private global::Gtk.Label periodLabel;

	private global::Gtk.Label periodXLabel;

	private global::Gtk.Label periodYLabel;

	private global::Gtk.SpinButton FillX;

	private global::Gtk.SpinButton FillY;

	private global::Gtk.Label fillLabel;

	private global::Gtk.CheckButton gratingXYLock;

	private global::Gtk.Label patternGratingLabel;

	private global::Gtk.Fixed ringLayout;

	private global::Gtk.CheckButton Ring;

	private global::Gtk.CheckButton FillRing;

	private global::Gtk.Label diameterLabel;

	private global::Gtk.HScale ringDiameterScale;

	private global::Gtk.SpinButton ringDiameterNumeric;

	private global::Gtk.Label aspectLabel;

	private global::Gtk.SpinButton aspectX;

	private global::Gtk.Label aspectXLabel;

	private global::Gtk.Label aspectYLabel;

	private global::Gtk.SpinButton aspectY;

	private global::Gtk.Label ringsLabel;

	private global::Gtk.SpinButton Rings;

	private global::Gtk.Label ringPeriodLabel;

	private global::Gtk.SpinButton RingPeriod;

	private global::Gtk.Label patternCircle;

	private global::Gtk.Fixed boxLayout;

	private global::Gtk.CheckButton Box;

	private global::Gtk.CheckButton FillBox;

	private global::Gtk.Label boxWidthLabel;

	private global::Gtk.HScale boxWidthScale;

	private global::Gtk.SpinButton boxWidthNumeric;

	private global::Gtk.Label boxesLabel;

	private global::Gtk.SpinButton Boxes;

	private global::Gtk.SpinButton BoxPeriod;

	private global::Gtk.Label boxPeriodLabel;

	private global::Gtk.Label patternBox;

	private global::Gtk.Fixed loadSaveLayout;

	private global::Gtk.Button loadPatternButton;

	private global::Gtk.Button savePatternButton;

	private global::Gtk.CheckButton Custom;

	private global::Gtk.Image CustomPattern;

	private global::Gtk.Button clearPatternButton;

	private global::Gtk.Label patternLoadSave;

	private global::Gtk.Fixed settingsLayout;

	private global::Gtk.Button loadSettingsButton;

	private global::Gtk.Button saveSettingsButton;

	private global::Gtk.Label settingsStatus;

	private global::Gtk.Label settingsLabel;

	private global::Gtk.Label patternWidthLabel;

	private global::Gtk.SpinButton patternWidth;

	private global::Gtk.Label patternHeightLabel;

	private global::Gtk.SpinButton patternHeight;

	private global::Gtk.SpinButton MarkerSize;

	private global::Gtk.Label markerSizeLabel;

	private global::Gtk.SpinButton patternTop;

	private global::Gtk.Label patternTopLabel;

	private global::Gtk.SpinButton patternLeft;

	private global::Gtk.Label patternLeftLabel;

	private global::Gtk.Label patternLabel;

	private global::Gtk.Fixed imageDetectLayout;

	private global::Gtk.Label ThresholdLabel;

	private global::Gtk.Label EdgeThresholdLabel;

	private global::Gtk.Label LinkingThresholdLabel;

	private global::Gtk.SpinButton EdgeThreshold;

	private global::Gtk.SpinButton LinkingThreshold;

	private global::Gtk.Label MinAreaLabel;

	private global::Gtk.Label MaxAreaLabel;

	private global::Gtk.SpinButton MinArea;

	private global::Gtk.SpinButton MaxArea;

	private global::Gtk.Label CircleLabel;

	private global::Gtk.Label HoughThresholdLabel;

	private global::Gtk.Label MinRadiusLabel;

	private global::Gtk.Label MaxRadiusLabel;

	private global::Gtk.SpinButton HoughThreshold;

	private global::Gtk.SpinButton MinRadius;

	private global::Gtk.SpinButton MaxRadius;

	private global::Gtk.Label AreaLabel;

	private global::Gtk.Label CircleDistanceLabel;

	private global::Gtk.SpinButton CircleDistance;

	private global::Gtk.Notebook DetectLayout;

	private global::Gtk.Fixed detectLayout;

	private global::Gtk.Button edgeBlobsButton;

	private global::Gtk.Button houghCircleButton;

	private global::Gtk.Button blobsButton;

	private global::Gtk.Button simpleBlobsButton;

	private global::Gtk.Button saveProcessedImageButton;

	private global::Gtk.Button saveBlobsButton;

	private global::Gtk.Button facesButton;

	private global::Gtk.Label DetectLabel;

	private global::Gtk.Fixed preProcessLayout;

	private global::Gtk.CheckButton DownUpSample;

	private global::Gtk.CheckButton InvertGray;

	private global::Gtk.CheckButton SubtractBackground;

	private global::Gtk.CheckButton Normalize;

	private global::Gtk.Label DetectPreProcessLabel;

	private global::Gtk.Fixed gaussianFilterLayout;

	private global::Gtk.CheckButton GaussianFilter;

	private global::Gtk.Label gaussianFilterKernelLabel;

	private global::Gtk.Label gaussianFilterWidthLabel;

	private global::Gtk.Label gaussianFilterHeightLabel;

	private global::Gtk.SpinButton GaussianFilterWidth;

	private global::Gtk.SpinButton GaussianFilterHeight;

	private global::Gtk.Label GaussianFilterStdevLabel;

	private global::Gtk.Label GaussianFilterStdevXLabel;

	private global::Gtk.Label GaussianFilterStdevYLabel;

	private global::Gtk.SpinButton GaussianFilterStdevX;

	private global::Gtk.SpinButton GaussianFilterStdevY;

	private global::Gtk.Label GuassianFilterLabel;

	private global::Gtk.Fixed markersLayout;

	private global::Gtk.Label MarkerSizeLabel;

	private global::Gtk.SpinButton spinbutton13;

	private global::Gtk.Label ColorsLabel;

	private global::Gtk.Label SelectedColorLabel;

	private global::Gtk.Label MarkerColorLabel;

	private global::Gtk.ColorButton MarkerColor;

	private global::Gtk.ColorButton SelectedColor;

	private global::Gtk.Label MarkersLabel;

	private global::Gtk.Fixed imageSettingsLayout;

	private global::Gtk.Button loadImageSettingsButton;

	private global::Gtk.Button saveImageSettingsButton;

	private global::Gtk.Label detectSettingsLabel;

	private global::Gtk.Label ImageSettingsLabel;

	private global::Gtk.Label dpLabel;

	private global::Gtk.SpinButton dp;

	private global::Gtk.Label ImageDetectLabel;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.WidthRequest = 1024;
		this.HeightRequest = 768;
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.Resizable = false;
		this.AllowGrow = false;
		this.DefaultWidth = 1024;
		this.DefaultHeight = 768;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.mainLayout = new global::Gtk.Fixed();
		this.mainLayout.WidthRequest = 1024;
		this.mainLayout.HeightRequest = 768;
		this.mainLayout.Name = "mainLayout";
		this.mainLayout.HasWindow = false;
		// Container child mainLayout.Gtk.Fixed+FixedChild
		this.mainNoteBook = new global::Gtk.Notebook();
		this.mainNoteBook.WidthRequest = 984;
		this.mainNoteBook.HeightRequest = 728;
		this.mainNoteBook.CanFocus = true;
		this.mainNoteBook.Name = "mainNoteBook";
		this.mainNoteBook.CurrentPage = 2;
		// Container child mainNoteBook.Gtk.Notebook+NotebookChild
		this.cameraLayout = new global::Gtk.Fixed();
		this.cameraLayout.WidthRequest = 984;
		this.cameraLayout.HeightRequest = 728;
		this.cameraLayout.Name = "cameraLayout";
		this.cameraLayout.HasWindow = false;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.cameraImageEvent = new global::Gtk.EventBox();
		this.cameraImageEvent.WidthRequest = 640;
		this.cameraImageEvent.HeightRequest = 480;
		this.cameraImageEvent.Events = ((global::Gdk.EventMask)(772));
		this.cameraImageEvent.Name = "cameraImageEvent";
		this.cameraImageEvent.AboveChild = true;
		// Container child cameraImageEvent.Gtk.Container+ContainerChild
		this.cameraImage = new global::Gtk.Image();
		this.cameraImage.WidthRequest = 640;
		this.cameraImage.HeightRequest = 480;
		this.cameraImage.Events = ((global::Gdk.EventMask)(772));
		this.cameraImage.Name = "cameraImage";
		this.cameraImageEvent.Add(this.cameraImage);
		this.cameraLayout.Add(this.cameraImageEvent);
		global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.cameraImageEvent]));
		w2.X = 20;
		w2.Y = 20;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.grabButton = new global::Gtk.Button();
		this.grabButton.Name = "grabButton";
		this.grabButton.UseUnderline = true;
		this.grabButton.Label = global::Mono.Unix.Catalog.GetString("Grab");
		this.cameraLayout.Add(this.grabButton);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.grabButton]));
		w3.X = 20;
		w3.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.stopButton = new global::Gtk.Button();
		this.stopButton.CanFocus = true;
		this.stopButton.Name = "stopButton";
		this.stopButton.UseUnderline = true;
		this.stopButton.Label = global::Mono.Unix.Catalog.GetString("Stop");
		this.cameraLayout.Add(this.stopButton);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.stopButton]));
		w4.X = 80;
		w4.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.restartButton = new global::Gtk.Button();
		this.restartButton.Name = "restartButton";
		this.restartButton.UseUnderline = true;
		this.restartButton.FocusOnClick = false;
		this.restartButton.Label = global::Mono.Unix.Catalog.GetString("Restart");
		this.cameraLayout.Add(this.restartButton);
		global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.restartButton]));
		w5.X = 140;
		w5.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.clearButton = new global::Gtk.Button();
		this.clearButton.Name = "clearButton";
		this.clearButton.UseUnderline = true;
		this.clearButton.FocusOnClick = false;
		this.clearButton.Label = global::Mono.Unix.Catalog.GetString("Clear Selection");
		this.cameraLayout.Add(this.clearButton);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.clearButton]));
		w6.X = 220;
		w6.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.ellipseBoxToggle = new global::Gtk.ToggleButton();
		this.ellipseBoxToggle.WidthRequest = 120;
		this.ellipseBoxToggle.Name = "ellipseBoxToggle";
		this.ellipseBoxToggle.UseUnderline = true;
		this.ellipseBoxToggle.FocusOnClick = false;
		this.ellipseBoxToggle.Label = global::Mono.Unix.Catalog.GetString("Ellipse/Box");
		this.cameraLayout.Add(this.ellipseBoxToggle);
		global::Gtk.Fixed.FixedChild w7 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.ellipseBoxToggle]));
		w7.X = 410;
		w7.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.editRegionLayout = new global::Gtk.Fixed();
		this.editRegionLayout.WidthRequest = 300;
		this.editRegionLayout.HeightRequest = 960;
		this.editRegionLayout.Name = "editRegionLayout";
		this.editRegionLayout.HasWindow = false;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.widthScale = new global::Gtk.HScale(null);
		this.widthScale.WidthRequest = 200;
		this.widthScale.HeightRequest = 30;
		this.widthScale.Name = "widthScale";
		this.widthScale.Adjustment.Lower = 2D;
		this.widthScale.Adjustment.Upper = 640D;
		this.widthScale.Adjustment.PageIncrement = 10D;
		this.widthScale.Adjustment.StepIncrement = 1D;
		this.widthScale.Adjustment.Value = 12D;
		this.widthScale.DrawValue = false;
		this.widthScale.Digits = 0;
		this.widthScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.widthScale);
		global::Gtk.Fixed.FixedChild w8 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.widthScale]));
		w8.X = 10;
		w8.Y = 60;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.regionWidthLabel = new global::Gtk.Label();
		this.regionWidthLabel.Name = "regionWidthLabel";
		this.regionWidthLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Width</b>");
		this.regionWidthLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.regionWidthLabel);
		global::Gtk.Fixed.FixedChild w9 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.regionWidthLabel]));
		w9.X = 10;
		w9.Y = 30;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.scaleHeightLabel = new global::Gtk.Label();
		this.scaleHeightLabel.Name = "scaleHeightLabel";
		this.scaleHeightLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Height</b>");
		this.scaleHeightLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.scaleHeightLabel);
		global::Gtk.Fixed.FixedChild w10 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.scaleHeightLabel]));
		w10.X = 10;
		w10.Y = 110;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.heightScale = new global::Gtk.HScale(null);
		this.heightScale.WidthRequest = 200;
		this.heightScale.HeightRequest = 30;
		this.heightScale.Name = "heightScale";
		this.heightScale.Adjustment.Lower = 2D;
		this.heightScale.Adjustment.Upper = 480D;
		this.heightScale.Adjustment.PageIncrement = 10D;
		this.heightScale.Adjustment.StepIncrement = 1D;
		this.heightScale.Adjustment.Value = 2D;
		this.heightScale.DrawValue = false;
		this.heightScale.Digits = 0;
		this.heightScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.heightScale);
		global::Gtk.Fixed.FixedChild w11 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.heightScale]));
		w11.X = 10;
		w11.Y = 140;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.widthScaleNumeric = new global::Gtk.SpinButton(2D, 640D, 1D);
		this.widthScaleNumeric.WidthRequest = 70;
		this.widthScaleNumeric.HeightRequest = 30;
		this.widthScaleNumeric.Name = "widthScaleNumeric";
		this.widthScaleNumeric.Adjustment.PageIncrement = 10D;
		this.widthScaleNumeric.ClimbRate = 1D;
		this.widthScaleNumeric.Numeric = true;
		this.widthScaleNumeric.Value = 2D;
		this.editRegionLayout.Add(this.widthScaleNumeric);
		global::Gtk.Fixed.FixedChild w12 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.widthScaleNumeric]));
		w12.X = 135;
		w12.Y = 24;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.heightScaleNumeric = new global::Gtk.SpinButton(2D, 480D, 1D);
		this.heightScaleNumeric.WidthRequest = 70;
		this.heightScaleNumeric.HeightRequest = 30;
		this.heightScaleNumeric.Name = "heightScaleNumeric";
		this.heightScaleNumeric.Adjustment.PageIncrement = 10D;
		this.heightScaleNumeric.ClimbRate = 1D;
		this.heightScaleNumeric.Numeric = true;
		this.heightScaleNumeric.Value = 2D;
		this.editRegionLayout.Add(this.heightScaleNumeric);
		global::Gtk.Fixed.FixedChild w13 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.heightScaleNumeric]));
		w13.X = 135;
		w13.Y = 104;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.ResizeLabel = new global::Gtk.Label();
		this.ResizeLabel.Name = "ResizeLabel";
		this.ResizeLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Resize</b>");
		this.ResizeLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.ResizeLabel);
		global::Gtk.Fixed.FixedChild w14 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.ResizeLabel]));
		w14.X = 10;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.MoveLabel = new global::Gtk.Label();
		this.MoveLabel.Name = "MoveLabel";
		this.MoveLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Move</b>");
		this.MoveLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.MoveLabel);
		global::Gtk.Fixed.FixedChild w15 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.MoveLabel]));
		w15.X = 10;
		w15.Y = 200;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dxLabel = new global::Gtk.Label();
		this.dxLabel.Name = "dxLabel";
		this.dxLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>X</b>");
		this.dxLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.dxLabel);
		global::Gtk.Fixed.FixedChild w16 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dxLabel]));
		w16.X = 10;
		w16.Y = 230;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dxScale = new global::Gtk.HScale(null);
		this.dxScale.WidthRequest = 200;
		this.dxScale.HeightRequest = 30;
		this.dxScale.CanFocus = true;
		this.dxScale.Name = "dxScale";
		this.dxScale.Adjustment.Lower = -640D;
		this.dxScale.Adjustment.Upper = 640D;
		this.dxScale.Adjustment.PageIncrement = 10D;
		this.dxScale.Adjustment.StepIncrement = 1D;
		this.dxScale.DrawValue = false;
		this.dxScale.Digits = 0;
		this.dxScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.dxScale);
		global::Gtk.Fixed.FixedChild w17 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dxScale]));
		w17.X = 10;
		w17.Y = 260;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dxScaleNumeric = new global::Gtk.SpinButton(-640D, 640D, 1D);
		this.dxScaleNumeric.WidthRequest = 70;
		this.dxScaleNumeric.HeightRequest = 30;
		this.dxScaleNumeric.Name = "dxScaleNumeric";
		this.dxScaleNumeric.Adjustment.PageIncrement = 10D;
		this.dxScaleNumeric.ClimbRate = 1D;
		this.dxScaleNumeric.Numeric = true;
		this.editRegionLayout.Add(this.dxScaleNumeric);
		global::Gtk.Fixed.FixedChild w18 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dxScaleNumeric]));
		w18.X = 135;
		w18.Y = 226;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dyLabel = new global::Gtk.Label();
		this.dyLabel.Name = "dyLabel";
		this.dyLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Y</b>");
		this.dyLabel.UseMarkup = true;
		this.editRegionLayout.Add(this.dyLabel);
		global::Gtk.Fixed.FixedChild w19 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dyLabel]));
		w19.X = 10;
		w19.Y = 310;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dyScale = new global::Gtk.HScale(null);
		this.dyScale.WidthRequest = 200;
		this.dyScale.HeightRequest = 30;
		this.dyScale.Name = "dyScale";
		this.dyScale.Adjustment.Lower = -480D;
		this.dyScale.Adjustment.Upper = 480D;
		this.dyScale.Adjustment.PageIncrement = 10D;
		this.dyScale.Adjustment.StepIncrement = 1D;
		this.dyScale.Adjustment.Value = 20D;
		this.dyScale.DrawValue = false;
		this.dyScale.Digits = 0;
		this.dyScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.editRegionLayout.Add(this.dyScale);
		global::Gtk.Fixed.FixedChild w20 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dyScale]));
		w20.X = 10;
		w20.Y = 340;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.dyScaleNumeric = new global::Gtk.SpinButton(-480D, 480D, 1D);
		this.dyScaleNumeric.WidthRequest = 70;
		this.dyScaleNumeric.HeightRequest = 30;
		this.dyScaleNumeric.Name = "dyScaleNumeric";
		this.dyScaleNumeric.Adjustment.PageIncrement = 10D;
		this.dyScaleNumeric.ClimbRate = 1D;
		this.dyScaleNumeric.Numeric = true;
		this.editRegionLayout.Add(this.dyScaleNumeric);
		global::Gtk.Fixed.FixedChild w21 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.dyScaleNumeric]));
		w21.X = 135;
		w21.Y = 304;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.closeEditButton = new global::Gtk.Button();
		this.closeEditButton.Name = "closeEditButton";
		this.closeEditButton.UseUnderline = true;
		this.closeEditButton.Label = global::Mono.Unix.Catalog.GetString("Close");
		this.editRegionLayout.Add(this.closeEditButton);
		global::Gtk.Fixed.FixedChild w22 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.closeEditButton]));
		w22.X = 160;
		w22.Y = 400;
		// Container child editRegionLayout.Gtk.Fixed+FixedChild
		this.regionEnabled = new global::Gtk.CheckButton();
		this.regionEnabled.CanFocus = true;
		this.regionEnabled.Name = "regionEnabled";
		this.regionEnabled.Label = global::Mono.Unix.Catalog.GetString("Enabled");
		this.regionEnabled.DrawIndicator = true;
		this.regionEnabled.UseUnderline = true;
		this.editRegionLayout.Add(this.regionEnabled);
		global::Gtk.Fixed.FixedChild w23 = ((global::Gtk.Fixed.FixedChild)(this.editRegionLayout[this.regionEnabled]));
		w23.X = 8;
		w23.Y = 400;
		this.cameraLayout.Add(this.editRegionLayout);
		global::Gtk.Fixed.FixedChild w24 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.editRegionLayout]));
		w24.X = 670;
		w24.Y = 20;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.saveButton = new global::Gtk.Button();
		this.saveButton.Name = "saveButton";
		this.saveButton.UseUnderline = true;
		this.saveButton.FocusOnClick = false;
		this.saveButton.Label = global::Mono.Unix.Catalog.GetString("Save");
		this.cameraLayout.Add(this.saveButton);
		global::Gtk.Fixed.FixedChild w25 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.saveButton]));
		w25.X = 350;
		w25.Y = 520;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.cameraFlipX = new global::Gtk.CheckButton();
		this.cameraFlipX.Name = "cameraFlipX";
		this.cameraFlipX.Label = global::Mono.Unix.Catalog.GetString("Flip X");
		this.cameraFlipX.DrawIndicator = true;
		this.cameraFlipX.UseUnderline = true;
		this.cameraFlipX.FocusOnClick = false;
		this.cameraLayout.Add(this.cameraFlipX);
		global::Gtk.Fixed.FixedChild w26 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.cameraFlipX]));
		w26.X = 18;
		w26.Y = 555;
		// Container child cameraLayout.Gtk.Fixed+FixedChild
		this.cameraFlipY = new global::Gtk.CheckButton();
		this.cameraFlipY.Name = "cameraFlipY";
		this.cameraFlipY.Label = global::Mono.Unix.Catalog.GetString("Flip Y");
		this.cameraFlipY.DrawIndicator = true;
		this.cameraFlipY.UseUnderline = true;
		this.cameraFlipY.FocusOnClick = false;
		this.cameraLayout.Add(this.cameraFlipY);
		global::Gtk.Fixed.FixedChild w27 = ((global::Gtk.Fixed.FixedChild)(this.cameraLayout[this.cameraFlipY]));
		w27.X = 18;
		w27.Y = 585;
		this.mainNoteBook.Add(this.cameraLayout);
		// Notebook tab
		this.cameraLabel = new global::Gtk.Label();
		this.cameraLabel.Name = "cameraLabel";
		this.cameraLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Camera");
		this.mainNoteBook.SetTabLabel(this.cameraLayout, this.cameraLabel);
		this.cameraLabel.ShowAll();
		// Container child mainNoteBook.Gtk.Notebook+NotebookChild
		this.patternLayout = new global::Gtk.Fixed();
		this.patternLayout.Name = "patternLayout";
		this.patternLayout.HasWindow = false;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleX = new global::Gtk.HScale(null);
		this.patternScaleX.WidthRequest = 200;
		this.patternScaleX.HeightRequest = 30;
		this.patternScaleX.Name = "patternScaleX";
		this.patternScaleX.Adjustment.Lower = 0.1D;
		this.patternScaleX.Adjustment.Upper = 4D;
		this.patternScaleX.Adjustment.PageIncrement = 1D;
		this.patternScaleX.Adjustment.StepIncrement = 0.1D;
		this.patternScaleX.Adjustment.Value = 0.901666666666667D;
		this.patternScaleX.DrawValue = false;
		this.patternScaleX.Digits = 2;
		this.patternScaleX.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.patternScaleX);
		global::Gtk.Fixed.FixedChild w29 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleX]));
		w29.X = 20;
		w29.Y = 40;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleY = new global::Gtk.HScale(null);
		this.patternScaleY.WidthRequest = 200;
		this.patternScaleY.HeightRequest = 30;
		this.patternScaleY.Name = "patternScaleY";
		this.patternScaleY.Adjustment.Lower = 0.1D;
		this.patternScaleY.Adjustment.Upper = 4D;
		this.patternScaleY.Adjustment.PageIncrement = 1D;
		this.patternScaleY.Adjustment.StepIncrement = 0.1D;
		this.patternScaleY.Adjustment.Value = 1D;
		this.patternScaleY.DrawValue = false;
		this.patternScaleY.Digits = 2;
		this.patternScaleY.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.patternScaleY);
		global::Gtk.Fixed.FixedChild w30 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleY]));
		w30.X = 20;
		w30.Y = 110;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleXLabel = new global::Gtk.Label();
		this.patternScaleXLabel.Name = "patternScaleXLabel";
		this.patternScaleXLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>X - Scale</b>");
		this.patternScaleXLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternScaleXLabel);
		global::Gtk.Fixed.FixedChild w31 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleXLabel]));
		w31.X = 20;
		w31.Y = 10;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleYLabel = new global::Gtk.Label();
		this.patternScaleYLabel.Name = "patternScaleYLabel";
		this.patternScaleYLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Y - Scale</b>");
		this.patternScaleYLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternScaleYLabel);
		global::Gtk.Fixed.FixedChild w32 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleYLabel]));
		w32.X = 20;
		w32.Y = 80;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.resetScaleButton = new global::Gtk.Button();
		this.resetScaleButton.Name = "resetScaleButton";
		this.resetScaleButton.UseUnderline = true;
		this.resetScaleButton.Label = global::Mono.Unix.Catalog.GetString("Reset Scales");
		this.patternLayout.Add(this.resetScaleButton);
		global::Gtk.Fixed.FixedChild w33 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.resetScaleButton]));
		w33.X = 20;
		w33.Y = 160;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleXNumeric = new global::Gtk.SpinButton(0.1D, 4D, 0.1D);
		this.patternScaleXNumeric.Name = "patternScaleXNumeric";
		this.patternScaleXNumeric.Adjustment.PageIncrement = 1D;
		this.patternScaleXNumeric.ClimbRate = 1D;
		this.patternScaleXNumeric.Digits = ((uint)(2));
		this.patternScaleXNumeric.Numeric = true;
		this.patternScaleXNumeric.Value = 1D;
		this.patternLayout.Add(this.patternScaleXNumeric);
		global::Gtk.Fixed.FixedChild w34 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleXNumeric]));
		w34.X = 145;
		w34.Y = 6;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternScaleYNumeric = new global::Gtk.SpinButton(0.1D, 4D, 0.1D);
		this.patternScaleYNumeric.Name = "patternScaleYNumeric";
		this.patternScaleYNumeric.Adjustment.PageIncrement = 1D;
		this.patternScaleYNumeric.ClimbRate = 1D;
		this.patternScaleYNumeric.Digits = ((uint)(2));
		this.patternScaleYNumeric.Numeric = true;
		this.patternScaleYNumeric.Value = 1D;
		this.patternLayout.Add(this.patternScaleYNumeric);
		global::Gtk.Fixed.FixedChild w35 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternScaleYNumeric]));
		w35.X = 145;
		w35.Y = 74;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetXLabel = new global::Gtk.Label();
		this.patternOffsetXLabel.Name = "patternOffsetXLabel";
		this.patternOffsetXLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>X - Offset</b>");
		this.patternOffsetXLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternOffsetXLabel);
		global::Gtk.Fixed.FixedChild w36 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetXLabel]));
		w36.X = 20;
		w36.Y = 220;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetX = new global::Gtk.HScale(null);
		this.patternOffsetX.WidthRequest = 200;
		this.patternOffsetX.HeightRequest = 30;
		this.patternOffsetX.Name = "patternOffsetX";
		this.patternOffsetX.Adjustment.Lower = -1280D;
		this.patternOffsetX.Adjustment.Upper = 1280D;
		this.patternOffsetX.Adjustment.PageIncrement = 10D;
		this.patternOffsetX.Adjustment.StepIncrement = 1D;
		this.patternOffsetX.DrawValue = false;
		this.patternOffsetX.Digits = 0;
		this.patternOffsetX.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.patternOffsetX);
		global::Gtk.Fixed.FixedChild w37 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetX]));
		w37.X = 20;
		w37.Y = 250;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetYLabel = new global::Gtk.Label();
		this.patternOffsetYLabel.Name = "patternOffsetYLabel";
		this.patternOffsetYLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Y - Offset</b>");
		this.patternOffsetYLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternOffsetYLabel);
		global::Gtk.Fixed.FixedChild w38 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetYLabel]));
		w38.X = 20;
		w38.Y = 290;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetY = new global::Gtk.HScale(null);
		this.patternOffsetY.WidthRequest = 200;
		this.patternOffsetY.HeightRequest = 30;
		this.patternOffsetY.CanFocus = true;
		this.patternOffsetY.Name = "patternOffsetY";
		this.patternOffsetY.Adjustment.Lower = -720D;
		this.patternOffsetY.Adjustment.Upper = 720D;
		this.patternOffsetY.Adjustment.PageIncrement = 10D;
		this.patternOffsetY.Adjustment.StepIncrement = 1D;
		this.patternOffsetY.Adjustment.Value = 1.4210854715202E-14D;
		this.patternOffsetY.DrawValue = false;
		this.patternOffsetY.Digits = 0;
		this.patternOffsetY.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.patternOffsetY);
		global::Gtk.Fixed.FixedChild w39 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetY]));
		w39.X = 20;
		w39.Y = 320;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetYNumeric = new global::Gtk.SpinButton(-1280D, 1280D, 1D);
		this.patternOffsetYNumeric.WidthRequest = 0;
		this.patternOffsetYNumeric.Name = "patternOffsetYNumeric";
		this.patternOffsetYNumeric.Adjustment.PageIncrement = 10D;
		this.patternOffsetYNumeric.ClimbRate = 1D;
		this.patternOffsetYNumeric.Numeric = true;
		this.patternLayout.Add(this.patternOffsetYNumeric);
		global::Gtk.Fixed.FixedChild w40 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetYNumeric]));
		w40.X = 145;
		w40.Y = 284;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternOffsetXNumeric = new global::Gtk.SpinButton(-1280D, 1280D, 1D);
		this.patternOffsetXNumeric.Name = "patternOffsetXNumeric";
		this.patternOffsetXNumeric.Adjustment.PageIncrement = 10D;
		this.patternOffsetXNumeric.ClimbRate = 1D;
		this.patternOffsetXNumeric.Numeric = true;
		this.patternLayout.Add(this.patternOffsetXNumeric);
		global::Gtk.Fixed.FixedChild w41 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternOffsetXNumeric]));
		w41.X = 145;
		w41.Y = 216;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.resetOffsetButton = new global::Gtk.Button();
		this.resetOffsetButton.Name = "resetOffsetButton";
		this.resetOffsetButton.UseUnderline = true;
		this.resetOffsetButton.Label = global::Mono.Unix.Catalog.GetString("Reset Offsets");
		this.patternLayout.Add(this.resetOffsetButton);
		global::Gtk.Fixed.FixedChild w42 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.resetOffsetButton]));
		w42.X = 20;
		w42.Y = 370;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.grayLevelLabel = new global::Gtk.Label();
		this.grayLevelLabel.Name = "grayLevelLabel";
		this.grayLevelLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Gray Level</b>");
		this.grayLevelLabel.UseMarkup = true;
		this.patternLayout.Add(this.grayLevelLabel);
		global::Gtk.Fixed.FixedChild w43 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.grayLevelLabel]));
		w43.X = 20;
		w43.Y = 430;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.grayLevelScale = new global::Gtk.HScale(null);
		this.grayLevelScale.WidthRequest = 200;
		this.grayLevelScale.HeightRequest = 30;
		this.grayLevelScale.Name = "grayLevelScale";
		this.grayLevelScale.Adjustment.Upper = 255D;
		this.grayLevelScale.Adjustment.PageIncrement = 10D;
		this.grayLevelScale.Adjustment.StepIncrement = 1D;
		this.grayLevelScale.DrawValue = false;
		this.grayLevelScale.Digits = 0;
		this.grayLevelScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.grayLevelScale);
		global::Gtk.Fixed.FixedChild w44 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.grayLevelScale]));
		w44.X = 21;
		w44.Y = 460;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.grayLevelNumeric = new global::Gtk.SpinButton(0D, 255D, 1D);
		this.grayLevelNumeric.Name = "grayLevelNumeric";
		this.grayLevelNumeric.Adjustment.PageIncrement = 10D;
		this.grayLevelNumeric.ClimbRate = 1D;
		this.grayLevelNumeric.Numeric = true;
		this.patternLayout.Add(this.grayLevelNumeric);
		global::Gtk.Fixed.FixedChild w45 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.grayLevelNumeric]));
		w45.X = 145;
		w45.Y = 426;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.backgroundLevelLabel = new global::Gtk.Label();
		this.backgroundLevelLabel.Name = "backgroundLevelLabel";
		this.backgroundLevelLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Background</b>");
		this.backgroundLevelLabel.UseMarkup = true;
		this.patternLayout.Add(this.backgroundLevelLabel);
		global::Gtk.Fixed.FixedChild w46 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.backgroundLevelLabel]));
		w46.X = 20;
		w46.Y = 500;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.backgroundLevelScale = new global::Gtk.HScale(null);
		this.backgroundLevelScale.WidthRequest = 200;
		this.backgroundLevelScale.HeightRequest = 30;
		this.backgroundLevelScale.Name = "backgroundLevelScale";
		this.backgroundLevelScale.Adjustment.Upper = 255D;
		this.backgroundLevelScale.Adjustment.PageIncrement = 10D;
		this.backgroundLevelScale.Adjustment.StepIncrement = 1D;
		this.backgroundLevelScale.DrawValue = false;
		this.backgroundLevelScale.Digits = 0;
		this.backgroundLevelScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.patternLayout.Add(this.backgroundLevelScale);
		global::Gtk.Fixed.FixedChild w47 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.backgroundLevelScale]));
		w47.X = 20;
		w47.Y = 530;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.backgroundLevelNumeric = new global::Gtk.SpinButton(0D, 255D, 1D);
		this.backgroundLevelNumeric.Name = "backgroundLevelNumeric";
		this.backgroundLevelNumeric.Adjustment.PageIncrement = 10D;
		this.backgroundLevelNumeric.ClimbRate = 1D;
		this.backgroundLevelNumeric.Numeric = true;
		this.patternLayout.Add(this.backgroundLevelNumeric);
		global::Gtk.Fixed.FixedChild w48 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.backgroundLevelNumeric]));
		w48.X = 145;
		w48.Y = 496;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.FlipX = new global::Gtk.CheckButton();
		this.FlipX.Name = "FlipX";
		this.FlipX.Label = global::Mono.Unix.Catalog.GetString("Flip X");
		this.FlipX.DrawIndicator = true;
		this.FlipX.UseUnderline = true;
		this.patternLayout.Add(this.FlipX);
		global::Gtk.Fixed.FixedChild w49 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.FlipX]));
		w49.X = 300;
		w49.Y = 520;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.FlipY = new global::Gtk.CheckButton();
		this.FlipY.Name = "FlipY";
		this.FlipY.Label = global::Mono.Unix.Catalog.GetString("Flip Y");
		this.FlipY.DrawIndicator = true;
		this.FlipY.UseUnderline = true;
		this.patternLayout.Add(this.FlipY);
		global::Gtk.Fixed.FixedChild w50 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.FlipY]));
		w50.X = 400;
		w50.Y = 520;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.Invert = new global::Gtk.CheckButton();
		this.Invert.CanFocus = true;
		this.Invert.Name = "Invert";
		this.Invert.Label = global::Mono.Unix.Catalog.GetString("Invert");
		this.Invert.DrawIndicator = true;
		this.Invert.UseUnderline = true;
		this.patternLayout.Add(this.Invert);
		global::Gtk.Fixed.FixedChild w51 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.Invert]));
		w51.X = 500;
		w51.Y = 520;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternPreviewMode = new global::Gtk.CheckButton();
		this.patternPreviewMode.Name = "patternPreviewMode";
		this.patternPreviewMode.Label = global::Mono.Unix.Catalog.GetString("Preview Mode");
		this.patternPreviewMode.DrawIndicator = true;
		this.patternPreviewMode.UseUnderline = true;
		this.patternLayout.Add(this.patternPreviewMode);
		global::Gtk.Fixed.FixedChild w52 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternPreviewMode]));
		w52.X = 600;
		w52.Y = 520;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternNotebook = new global::Gtk.Notebook();
		this.patternNotebook.WidthRequest = 640;
		this.patternNotebook.HeightRequest = 130;
		this.patternNotebook.CanFocus = true;
		this.patternNotebook.Name = "patternNotebook";
		this.patternNotebook.CurrentPage = 5;
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.crossLayout = new global::Gtk.Fixed();
		this.crossLayout.Name = "crossLayout";
		this.crossLayout.HasWindow = false;
		// Container child crossLayout.Gtk.Fixed+FixedChild
		this.Cross = new global::Gtk.CheckButton();
		this.Cross.Name = "Cross";
		this.Cross.Label = global::Mono.Unix.Catalog.GetString("x - Cross Enabled");
		this.Cross.DrawIndicator = true;
		this.Cross.UseUnderline = true;
		this.Cross.FocusOnClick = false;
		this.crossLayout.Add(this.Cross);
		global::Gtk.Fixed.FixedChild w53 = ((global::Gtk.Fixed.FixedChild)(this.crossLayout[this.Cross]));
		w53.X = 5;
		w53.Y = 5;
		// Container child crossLayout.Gtk.Fixed+FixedChild
		this.Plus = new global::Gtk.CheckButton();
		this.Plus.Name = "Plus";
		this.Plus.Label = global::Mono.Unix.Catalog.GetString("+ Plus Enabled");
		this.Plus.DrawIndicator = true;
		this.Plus.UseUnderline = true;
		this.Plus.FocusOnClick = false;
		this.crossLayout.Add(this.Plus);
		global::Gtk.Fixed.FixedChild w54 = ((global::Gtk.Fixed.FixedChild)(this.crossLayout[this.Plus]));
		w54.X = 5;
		w54.Y = 35;
		this.patternNotebook.Add(this.crossLayout);
		// Notebook tab
		this.patternCrossLabel = new global::Gtk.Label();
		this.patternCrossLabel.Name = "patternCrossLabel";
		this.patternCrossLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Cross/Plus");
		this.patternNotebook.SetTabLabel(this.crossLayout, this.patternCrossLabel);
		this.patternCrossLabel.ShowAll();
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.gratingLayout = new global::Gtk.Fixed();
		this.gratingLayout.Name = "gratingLayout";
		this.gratingLayout.HasWindow = false;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.gratingConfigurationLabel = new global::Gtk.Label();
		this.gratingConfigurationLabel.Name = "gratingConfigurationLabel";
		this.gratingConfigurationLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Configuration</b>");
		this.gratingConfigurationLabel.UseMarkup = true;
		this.gratingLayout.Add(this.gratingConfigurationLabel);
		global::Gtk.Fixed.FixedChild w56 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.gratingConfigurationLabel]));
		w56.X = 365;
		w56.Y = 5;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.Grating = new global::Gtk.CheckButton();
		this.Grating.Name = "Grating";
		this.Grating.Label = global::Mono.Unix.Catalog.GetString("Enabled");
		this.Grating.DrawIndicator = true;
		this.Grating.UseUnderline = true;
		this.Grating.FocusOnClick = false;
		this.gratingLayout.Add(this.Grating);
		global::Gtk.Fixed.FixedChild w57 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.Grating]));
		w57.X = 5;
		w57.Y = 5;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.TL = new global::Gtk.CheckButton();
		this.TL.Name = "TL";
		this.TL.Label = "";
		this.TL.DrawIndicator = true;
		this.TL.UseUnderline = true;
		this.TL.FocusOnClick = false;
		this.gratingLayout.Add(this.TL);
		global::Gtk.Fixed.FixedChild w58 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.TL]));
		w58.X = 360;
		w58.Y = 30;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.TR = new global::Gtk.CheckButton();
		this.TR.Name = "TR";
		this.TR.Label = "";
		this.TR.DrawIndicator = true;
		this.TR.UseUnderline = true;
		this.TR.FocusOnClick = false;
		this.gratingLayout.Add(this.TR);
		global::Gtk.Fixed.FixedChild w59 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.TR]));
		w59.X = 395;
		w59.Y = 30;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.BL = new global::Gtk.CheckButton();
		this.BL.Name = "BL";
		this.BL.Label = "";
		this.BL.DrawIndicator = true;
		this.BL.UseUnderline = true;
		this.BL.FocusOnClick = false;
		this.gratingLayout.Add(this.BL);
		global::Gtk.Fixed.FixedChild w60 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.BL]));
		w60.X = 360;
		w60.Y = 55;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.BR = new global::Gtk.CheckButton();
		this.BR.Name = "BR";
		this.BR.Label = "";
		this.BR.DrawIndicator = true;
		this.BR.UseUnderline = true;
		this.BR.FocusOnClick = false;
		this.gratingLayout.Add(this.BR);
		global::Gtk.Fixed.FixedChild w61 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.BR]));
		w61.X = 395;
		w61.Y = 55;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.PeriodX = new global::Gtk.SpinButton(1D, 200D, 1D);
		this.PeriodX.Name = "PeriodX";
		this.PeriodX.Adjustment.PageIncrement = 10D;
		this.PeriodX.ClimbRate = 1D;
		this.PeriodX.Numeric = true;
		this.PeriodX.Value = 1D;
		this.gratingLayout.Add(this.PeriodX);
		global::Gtk.Fixed.FixedChild w62 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.PeriodX]));
		w62.X = 130;
		w62.Y = 25;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.PeriodY = new global::Gtk.SpinButton(1D, 200D, 1D);
		this.PeriodY.Name = "PeriodY";
		this.PeriodY.Adjustment.PageIncrement = 10D;
		this.PeriodY.ClimbRate = 1D;
		this.PeriodY.Numeric = true;
		this.PeriodY.Value = 1D;
		this.gratingLayout.Add(this.PeriodY);
		global::Gtk.Fixed.FixedChild w63 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.PeriodY]));
		w63.X = 130;
		w63.Y = 60;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.periodLabel = new global::Gtk.Label();
		this.periodLabel.Name = "periodLabel";
		this.periodLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Period</b>");
		this.periodLabel.UseMarkup = true;
		this.gratingLayout.Add(this.periodLabel);
		global::Gtk.Fixed.FixedChild w64 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.periodLabel]));
		w64.X = 130;
		w64.Y = 5;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.periodXLabel = new global::Gtk.Label();
		this.periodXLabel.Name = "periodXLabel";
		this.periodXLabel.LabelProp = global::Mono.Unix.Catalog.GetString("X");
		this.gratingLayout.Add(this.periodXLabel);
		global::Gtk.Fixed.FixedChild w65 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.periodXLabel]));
		w65.X = 115;
		w65.Y = 30;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.periodYLabel = new global::Gtk.Label();
		this.periodYLabel.Name = "periodYLabel";
		this.periodYLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Y");
		this.gratingLayout.Add(this.periodYLabel);
		global::Gtk.Fixed.FixedChild w66 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.periodYLabel]));
		w66.X = 115;
		w66.Y = 65;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.FillX = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.FillX.Name = "FillX";
		this.FillX.Adjustment.PageIncrement = 10D;
		this.FillX.ClimbRate = 1D;
		this.FillX.Numeric = true;
		this.FillX.Value = 1D;
		this.gratingLayout.Add(this.FillX);
		global::Gtk.Fixed.FixedChild w67 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.FillX]));
		w67.X = 195;
		w67.Y = 25;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.FillY = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.FillY.CanFocus = true;
		this.FillY.Name = "FillY";
		this.FillY.Adjustment.PageIncrement = 10D;
		this.FillY.ClimbRate = 1D;
		this.FillY.Numeric = true;
		this.FillY.Value = 1D;
		this.gratingLayout.Add(this.FillY);
		global::Gtk.Fixed.FixedChild w68 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.FillY]));
		w68.X = 195;
		w68.Y = 60;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.fillLabel = new global::Gtk.Label();
		this.fillLabel.Name = "fillLabel";
		this.fillLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Fill</b>");
		this.fillLabel.UseMarkup = true;
		this.gratingLayout.Add(this.fillLabel);
		global::Gtk.Fixed.FixedChild w69 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.fillLabel]));
		w69.X = 195;
		w69.Y = 5;
		// Container child gratingLayout.Gtk.Fixed+FixedChild
		this.gratingXYLock = new global::Gtk.CheckButton();
		this.gratingXYLock.Name = "gratingXYLock";
		this.gratingXYLock.Label = global::Mono.Unix.Catalog.GetString("Lock X-Y");
		this.gratingXYLock.DrawIndicator = true;
		this.gratingXYLock.UseUnderline = true;
		this.gratingXYLock.FocusOnClick = false;
		this.gratingLayout.Add(this.gratingXYLock);
		global::Gtk.Fixed.FixedChild w70 = ((global::Gtk.Fixed.FixedChild)(this.gratingLayout[this.gratingXYLock]));
		w70.X = 260;
		w70.Y = 50;
		this.patternNotebook.Add(this.gratingLayout);
		global::Gtk.Notebook.NotebookChild w71 = ((global::Gtk.Notebook.NotebookChild)(this.patternNotebook[this.gratingLayout]));
		w71.Position = 1;
		// Notebook tab
		this.patternGratingLabel = new global::Gtk.Label();
		this.patternGratingLabel.Name = "patternGratingLabel";
		this.patternGratingLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Grating");
		this.patternNotebook.SetTabLabel(this.gratingLayout, this.patternGratingLabel);
		this.patternGratingLabel.ShowAll();
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.ringLayout = new global::Gtk.Fixed();
		this.ringLayout.Name = "ringLayout";
		this.ringLayout.HasWindow = false;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.Ring = new global::Gtk.CheckButton();
		this.Ring.Name = "Ring";
		this.Ring.Label = global::Mono.Unix.Catalog.GetString("Enabled");
		this.Ring.DrawIndicator = true;
		this.Ring.UseUnderline = true;
		this.ringLayout.Add(this.Ring);
		global::Gtk.Fixed.FixedChild w72 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.Ring]));
		w72.X = 5;
		w72.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.FillRing = new global::Gtk.CheckButton();
		this.FillRing.Name = "FillRing";
		this.FillRing.Label = global::Mono.Unix.Catalog.GetString("Fill");
		this.FillRing.DrawIndicator = true;
		this.FillRing.UseUnderline = true;
		this.ringLayout.Add(this.FillRing);
		global::Gtk.Fixed.FixedChild w73 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.FillRing]));
		w73.X = 5;
		w73.Y = 35;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.diameterLabel = new global::Gtk.Label();
		this.diameterLabel.Name = "diameterLabel";
		this.diameterLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Diameter</b>");
		this.diameterLabel.UseMarkup = true;
		this.ringLayout.Add(this.diameterLabel);
		global::Gtk.Fixed.FixedChild w74 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.diameterLabel]));
		w74.X = 110;
		w74.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.ringDiameterScale = new global::Gtk.HScale(null);
		this.ringDiameterScale.WidthRequest = 200;
		this.ringDiameterScale.Name = "ringDiameterScale";
		this.ringDiameterScale.Adjustment.Lower = 1D;
		this.ringDiameterScale.Adjustment.Upper = 640D;
		this.ringDiameterScale.Adjustment.PageIncrement = 10D;
		this.ringDiameterScale.Adjustment.StepIncrement = 1D;
		this.ringDiameterScale.Adjustment.Value = 1D;
		this.ringDiameterScale.DrawValue = false;
		this.ringDiameterScale.Digits = 0;
		this.ringDiameterScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.ringLayout.Add(this.ringDiameterScale);
		global::Gtk.Fixed.FixedChild w75 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.ringDiameterScale]));
		w75.X = 110;
		w75.Y = 35;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.ringDiameterNumeric = new global::Gtk.SpinButton(1D, 640D, 1D);
		this.ringDiameterNumeric.Name = "ringDiameterNumeric";
		this.ringDiameterNumeric.Adjustment.PageIncrement = 10D;
		this.ringDiameterNumeric.ClimbRate = 1D;
		this.ringDiameterNumeric.Numeric = true;
		this.ringDiameterNumeric.Value = 1D;
		this.ringLayout.Add(this.ringDiameterNumeric);
		global::Gtk.Fixed.FixedChild w76 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.ringDiameterNumeric]));
		w76.X = 250;
		w76.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.aspectLabel = new global::Gtk.Label();
		this.aspectLabel.Name = "aspectLabel";
		this.aspectLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Aspect</b>");
		this.aspectLabel.UseMarkup = true;
		this.ringLayout.Add(this.aspectLabel);
		global::Gtk.Fixed.FixedChild w77 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.aspectLabel]));
		w77.X = 365;
		w77.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.aspectX = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.aspectX.CanFocus = true;
		this.aspectX.Name = "aspectX";
		this.aspectX.Adjustment.PageIncrement = 10D;
		this.aspectX.ClimbRate = 1D;
		this.aspectX.Numeric = true;
		this.aspectX.Value = 1D;
		this.ringLayout.Add(this.aspectX);
		global::Gtk.Fixed.FixedChild w78 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.aspectX]));
		w78.X = 365;
		w78.Y = 25;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.aspectXLabel = new global::Gtk.Label();
		this.aspectXLabel.Name = "aspectXLabel";
		this.aspectXLabel.LabelProp = global::Mono.Unix.Catalog.GetString("X");
		this.ringLayout.Add(this.aspectXLabel);
		global::Gtk.Fixed.FixedChild w79 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.aspectXLabel]));
		w79.X = 350;
		w79.Y = 30;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.aspectYLabel = new global::Gtk.Label();
		this.aspectYLabel.Name = "aspectYLabel";
		this.aspectYLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Y");
		this.ringLayout.Add(this.aspectYLabel);
		global::Gtk.Fixed.FixedChild w80 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.aspectYLabel]));
		w80.X = 350;
		w80.Y = 60;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.aspectY = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.aspectY.Name = "aspectY";
		this.aspectY.Adjustment.PageIncrement = 10D;
		this.aspectY.ClimbRate = 1D;
		this.aspectY.Numeric = true;
		this.aspectY.Value = 1D;
		this.ringLayout.Add(this.aspectY);
		global::Gtk.Fixed.FixedChild w81 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.aspectY]));
		w81.X = 365;
		w81.Y = 55;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.ringsLabel = new global::Gtk.Label();
		this.ringsLabel.Name = "ringsLabel";
		this.ringsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Rings</b>");
		this.ringsLabel.UseMarkup = true;
		this.ringLayout.Add(this.ringsLabel);
		global::Gtk.Fixed.FixedChild w82 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.ringsLabel]));
		w82.X = 430;
		w82.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.Rings = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.Rings.Name = "Rings";
		this.Rings.Adjustment.PageIncrement = 10D;
		this.Rings.ClimbRate = 1D;
		this.Rings.Numeric = true;
		this.Rings.Value = 1D;
		this.ringLayout.Add(this.Rings);
		global::Gtk.Fixed.FixedChild w83 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.Rings]));
		w83.X = 430;
		w83.Y = 25;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.ringPeriodLabel = new global::Gtk.Label();
		this.ringPeriodLabel.Name = "ringPeriodLabel";
		this.ringPeriodLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Period</b>");
		this.ringPeriodLabel.UseMarkup = true;
		this.ringLayout.Add(this.ringPeriodLabel);
		global::Gtk.Fixed.FixedChild w84 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.ringPeriodLabel]));
		w84.X = 500;
		w84.Y = 5;
		// Container child ringLayout.Gtk.Fixed+FixedChild
		this.RingPeriod = new global::Gtk.SpinButton(3D, 100D, 1D);
		this.RingPeriod.Name = "RingPeriod";
		this.RingPeriod.Adjustment.PageIncrement = 10D;
		this.RingPeriod.ClimbRate = 1D;
		this.RingPeriod.Numeric = true;
		this.RingPeriod.Value = 3D;
		this.ringLayout.Add(this.RingPeriod);
		global::Gtk.Fixed.FixedChild w85 = ((global::Gtk.Fixed.FixedChild)(this.ringLayout[this.RingPeriod]));
		w85.X = 500;
		w85.Y = 25;
		this.patternNotebook.Add(this.ringLayout);
		global::Gtk.Notebook.NotebookChild w86 = ((global::Gtk.Notebook.NotebookChild)(this.patternNotebook[this.ringLayout]));
		w86.Position = 2;
		// Notebook tab
		this.patternCircle = new global::Gtk.Label();
		this.patternCircle.Name = "patternCircle";
		this.patternCircle.LabelProp = global::Mono.Unix.Catalog.GetString("Circle/Ring");
		this.patternNotebook.SetTabLabel(this.ringLayout, this.patternCircle);
		this.patternCircle.ShowAll();
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.boxLayout = new global::Gtk.Fixed();
		this.boxLayout.Name = "boxLayout";
		this.boxLayout.HasWindow = false;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.Box = new global::Gtk.CheckButton();
		this.Box.CanFocus = true;
		this.Box.Name = "Box";
		this.Box.Label = global::Mono.Unix.Catalog.GetString("Enabled");
		this.Box.DrawIndicator = true;
		this.Box.UseUnderline = true;
		this.Box.FocusOnClick = false;
		this.boxLayout.Add(this.Box);
		global::Gtk.Fixed.FixedChild w87 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.Box]));
		w87.X = 5;
		w87.Y = 5;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.FillBox = new global::Gtk.CheckButton();
		this.FillBox.CanFocus = true;
		this.FillBox.Name = "FillBox";
		this.FillBox.Label = global::Mono.Unix.Catalog.GetString("Fill");
		this.FillBox.DrawIndicator = true;
		this.FillBox.UseUnderline = true;
		this.boxLayout.Add(this.FillBox);
		global::Gtk.Fixed.FixedChild w88 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.FillBox]));
		w88.X = 5;
		w88.Y = 35;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.boxWidthLabel = new global::Gtk.Label();
		this.boxWidthLabel.Name = "boxWidthLabel";
		this.boxWidthLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Width</b>");
		this.boxWidthLabel.UseMarkup = true;
		this.boxLayout.Add(this.boxWidthLabel);
		global::Gtk.Fixed.FixedChild w89 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.boxWidthLabel]));
		w89.X = 110;
		w89.Y = 5;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.boxWidthScale = new global::Gtk.HScale(null);
		this.boxWidthScale.WidthRequest = 200;
		this.boxWidthScale.CanFocus = true;
		this.boxWidthScale.Name = "boxWidthScale";
		this.boxWidthScale.Adjustment.Lower = 1D;
		this.boxWidthScale.Adjustment.Upper = 640D;
		this.boxWidthScale.Adjustment.PageIncrement = 10D;
		this.boxWidthScale.Adjustment.StepIncrement = 1D;
		this.boxWidthScale.Adjustment.Value = 1D;
		this.boxWidthScale.DrawValue = false;
		this.boxWidthScale.Digits = 0;
		this.boxWidthScale.ValuePos = ((global::Gtk.PositionType)(2));
		this.boxLayout.Add(this.boxWidthScale);
		global::Gtk.Fixed.FixedChild w90 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.boxWidthScale]));
		w90.X = 110;
		w90.Y = 35;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.boxWidthNumeric = new global::Gtk.SpinButton(1D, 640D, 1D);
		this.boxWidthNumeric.CanFocus = true;
		this.boxWidthNumeric.Name = "boxWidthNumeric";
		this.boxWidthNumeric.Adjustment.PageIncrement = 10D;
		this.boxWidthNumeric.ClimbRate = 1D;
		this.boxWidthNumeric.Numeric = true;
		this.boxWidthNumeric.Value = 1D;
		this.boxLayout.Add(this.boxWidthNumeric);
		global::Gtk.Fixed.FixedChild w91 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.boxWidthNumeric]));
		w91.X = 250;
		w91.Y = 5;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.boxesLabel = new global::Gtk.Label();
		this.boxesLabel.Name = "boxesLabel";
		this.boxesLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Boxes</b>");
		this.boxesLabel.UseMarkup = true;
		this.boxLayout.Add(this.boxesLabel);
		global::Gtk.Fixed.FixedChild w92 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.boxesLabel]));
		w92.X = 430;
		w92.Y = 5;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.Boxes = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.Boxes.Name = "Boxes";
		this.Boxes.Adjustment.PageIncrement = 10D;
		this.Boxes.ClimbRate = 1D;
		this.Boxes.Numeric = true;
		this.Boxes.Value = 1D;
		this.boxLayout.Add(this.Boxes);
		global::Gtk.Fixed.FixedChild w93 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.Boxes]));
		w93.X = 430;
		w93.Y = 25;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.BoxPeriod = new global::Gtk.SpinButton(3D, 100D, 1D);
		this.BoxPeriod.Name = "BoxPeriod";
		this.BoxPeriod.Adjustment.PageIncrement = 10D;
		this.BoxPeriod.ClimbRate = 1D;
		this.BoxPeriod.Numeric = true;
		this.BoxPeriod.Value = 3D;
		this.boxLayout.Add(this.BoxPeriod);
		global::Gtk.Fixed.FixedChild w94 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.BoxPeriod]));
		w94.X = 500;
		w94.Y = 25;
		// Container child boxLayout.Gtk.Fixed+FixedChild
		this.boxPeriodLabel = new global::Gtk.Label();
		this.boxPeriodLabel.Name = "boxPeriodLabel";
		this.boxPeriodLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Period</b>");
		this.boxPeriodLabel.UseMarkup = true;
		this.boxLayout.Add(this.boxPeriodLabel);
		global::Gtk.Fixed.FixedChild w95 = ((global::Gtk.Fixed.FixedChild)(this.boxLayout[this.boxPeriodLabel]));
		w95.X = 500;
		w95.Y = 5;
		this.patternNotebook.Add(this.boxLayout);
		global::Gtk.Notebook.NotebookChild w96 = ((global::Gtk.Notebook.NotebookChild)(this.patternNotebook[this.boxLayout]));
		w96.Position = 3;
		// Notebook tab
		this.patternBox = new global::Gtk.Label();
		this.patternBox.Name = "patternBox";
		this.patternBox.LabelProp = global::Mono.Unix.Catalog.GetString("Box");
		this.patternNotebook.SetTabLabel(this.boxLayout, this.patternBox);
		this.patternBox.ShowAll();
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.loadSaveLayout = new global::Gtk.Fixed();
		this.loadSaveLayout.Name = "loadSaveLayout";
		this.loadSaveLayout.HasWindow = false;
		// Container child loadSaveLayout.Gtk.Fixed+FixedChild
		this.loadPatternButton = new global::Gtk.Button();
		this.loadPatternButton.Name = "loadPatternButton";
		this.loadPatternButton.UseUnderline = true;
		this.loadPatternButton.FocusOnClick = false;
		this.loadPatternButton.Label = global::Mono.Unix.Catalog.GetString("Load Pattern");
		this.loadSaveLayout.Add(this.loadPatternButton);
		global::Gtk.Fixed.FixedChild w97 = ((global::Gtk.Fixed.FixedChild)(this.loadSaveLayout[this.loadPatternButton]));
		w97.X = 120;
		w97.Y = 2;
		// Container child loadSaveLayout.Gtk.Fixed+FixedChild
		this.savePatternButton = new global::Gtk.Button();
		this.savePatternButton.Name = "savePatternButton";
		this.savePatternButton.UseUnderline = true;
		this.savePatternButton.FocusOnClick = false;
		this.savePatternButton.Label = global::Mono.Unix.Catalog.GetString("Save Pattern");
		this.loadSaveLayout.Add(this.savePatternButton);
		global::Gtk.Fixed.FixedChild w98 = ((global::Gtk.Fixed.FixedChild)(this.loadSaveLayout[this.savePatternButton]));
		w98.X = 120;
		w98.Y = 32;
		// Container child loadSaveLayout.Gtk.Fixed+FixedChild
		this.Custom = new global::Gtk.CheckButton();
		this.Custom.Name = "Custom";
		this.Custom.Label = global::Mono.Unix.Catalog.GetString("Enabled");
		this.Custom.DrawIndicator = true;
		this.Custom.UseUnderline = true;
		this.loadSaveLayout.Add(this.Custom);
		global::Gtk.Fixed.FixedChild w99 = ((global::Gtk.Fixed.FixedChild)(this.loadSaveLayout[this.Custom]));
		w99.X = 5;
		w99.Y = 5;
		// Container child loadSaveLayout.Gtk.Fixed+FixedChild
		this.CustomPattern = new global::Gtk.Image();
		this.CustomPattern.WidthRequest = 80;
		this.CustomPattern.HeightRequest = 80;
		this.CustomPattern.Name = "CustomPattern";
		this.loadSaveLayout.Add(this.CustomPattern);
		global::Gtk.Fixed.FixedChild w100 = ((global::Gtk.Fixed.FixedChild)(this.loadSaveLayout[this.CustomPattern]));
		w100.X = 230;
		w100.Y = 5;
		// Container child loadSaveLayout.Gtk.Fixed+FixedChild
		this.clearPatternButton = new global::Gtk.Button();
		this.clearPatternButton.Name = "clearPatternButton";
		this.clearPatternButton.UseUnderline = true;
		this.clearPatternButton.FocusOnClick = false;
		this.clearPatternButton.Label = global::Mono.Unix.Catalog.GetString("Clear Pattern");
		this.loadSaveLayout.Add(this.clearPatternButton);
		global::Gtk.Fixed.FixedChild w101 = ((global::Gtk.Fixed.FixedChild)(this.loadSaveLayout[this.clearPatternButton]));
		w101.X = 120;
		w101.Y = 62;
		this.patternNotebook.Add(this.loadSaveLayout);
		global::Gtk.Notebook.NotebookChild w102 = ((global::Gtk.Notebook.NotebookChild)(this.patternNotebook[this.loadSaveLayout]));
		w102.Position = 4;
		// Notebook tab
		this.patternLoadSave = new global::Gtk.Label();
		this.patternLoadSave.Name = "patternLoadSave";
		this.patternLoadSave.LabelProp = global::Mono.Unix.Catalog.GetString("Custom");
		this.patternNotebook.SetTabLabel(this.loadSaveLayout, this.patternLoadSave);
		this.patternLoadSave.ShowAll();
		// Container child patternNotebook.Gtk.Notebook+NotebookChild
		this.settingsLayout = new global::Gtk.Fixed();
		this.settingsLayout.Name = "settingsLayout";
		this.settingsLayout.HasWindow = false;
		// Container child settingsLayout.Gtk.Fixed+FixedChild
		this.loadSettingsButton = new global::Gtk.Button();
		this.loadSettingsButton.Name = "loadSettingsButton";
		this.loadSettingsButton.UseUnderline = true;
		this.loadSettingsButton.FocusOnClick = false;
		this.loadSettingsButton.Label = global::Mono.Unix.Catalog.GetString("Load");
		this.settingsLayout.Add(this.loadSettingsButton);
		global::Gtk.Fixed.FixedChild w103 = ((global::Gtk.Fixed.FixedChild)(this.settingsLayout[this.loadSettingsButton]));
		w103.X = 10;
		w103.Y = 2;
		// Container child settingsLayout.Gtk.Fixed+FixedChild
		this.saveSettingsButton = new global::Gtk.Button();
		this.saveSettingsButton.Name = "saveSettingsButton";
		this.saveSettingsButton.UseUnderline = true;
		this.saveSettingsButton.FocusOnClick = false;
		this.saveSettingsButton.Label = global::Mono.Unix.Catalog.GetString("Save");
		this.settingsLayout.Add(this.saveSettingsButton);
		global::Gtk.Fixed.FixedChild w104 = ((global::Gtk.Fixed.FixedChild)(this.settingsLayout[this.saveSettingsButton]));
		w104.X = 10;
		w104.Y = 32;
		// Container child settingsLayout.Gtk.Fixed+FixedChild
		this.settingsStatus = new global::Gtk.Label();
		this.settingsStatus.Name = "settingsStatus";
		this.settingsStatus.LabelProp = global::Mono.Unix.Catalog.GetString("Load or Save Pattern Settings");
		this.settingsStatus.UseMarkup = true;
		this.settingsLayout.Add(this.settingsStatus);
		global::Gtk.Fixed.FixedChild w105 = ((global::Gtk.Fixed.FixedChild)(this.settingsLayout[this.settingsStatus]));
		w105.X = 12;
		w105.Y = 68;
		this.patternNotebook.Add(this.settingsLayout);
		global::Gtk.Notebook.NotebookChild w106 = ((global::Gtk.Notebook.NotebookChild)(this.patternNotebook[this.settingsLayout]));
		w106.Position = 5;
		// Notebook tab
		this.settingsLabel = new global::Gtk.Label();
		this.settingsLabel.Name = "settingsLabel";
		this.settingsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Settings");
		this.patternNotebook.SetTabLabel(this.settingsLayout, this.settingsLabel);
		this.settingsLabel.ShowAll();
		this.patternLayout.Add(this.patternNotebook);
		global::Gtk.Fixed.FixedChild w107 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternNotebook]));
		w107.X = 300;
		w107.Y = 550;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternWidthLabel = new global::Gtk.Label();
		this.patternWidthLabel.Name = "patternWidthLabel";
		this.patternWidthLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Width</b>");
		this.patternWidthLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternWidthLabel);
		global::Gtk.Fixed.FixedChild w108 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternWidthLabel]));
		w108.X = 40;
		w108.Y = 575;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternWidth = new global::Gtk.SpinButton(100D, 1920D, 1D);
		this.patternWidth.CanFocus = true;
		this.patternWidth.Name = "patternWidth";
		this.patternWidth.Adjustment.PageIncrement = 10D;
		this.patternWidth.ClimbRate = 1D;
		this.patternWidth.Numeric = true;
		this.patternWidth.Value = 100D;
		this.patternLayout.Add(this.patternWidth);
		global::Gtk.Fixed.FixedChild w109 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternWidth]));
		w109.X = 100;
		w109.Y = 570;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternHeightLabel = new global::Gtk.Label();
		this.patternHeightLabel.Name = "patternHeightLabel";
		this.patternHeightLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Height</b>");
		this.patternHeightLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternHeightLabel);
		global::Gtk.Fixed.FixedChild w110 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternHeightLabel]));
		w110.X = 40;
		w110.Y = 610;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternHeight = new global::Gtk.SpinButton(100D, 1200D, 1D);
		this.patternHeight.CanFocus = true;
		this.patternHeight.Name = "patternHeight";
		this.patternHeight.Adjustment.PageIncrement = 10D;
		this.patternHeight.ClimbRate = 1D;
		this.patternHeight.Numeric = true;
		this.patternHeight.Value = 100D;
		this.patternLayout.Add(this.patternHeight);
		global::Gtk.Fixed.FixedChild w111 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternHeight]));
		w111.X = 100;
		w111.Y = 605;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.MarkerSize = new global::Gtk.SpinButton(1D, 150D, 1D);
		this.MarkerSize.CanFocus = true;
		this.MarkerSize.Name = "MarkerSize";
		this.MarkerSize.Adjustment.PageIncrement = 10D;
		this.MarkerSize.ClimbRate = 1D;
		this.MarkerSize.Numeric = true;
		this.MarkerSize.Value = 1D;
		this.patternLayout.Add(this.MarkerSize);
		global::Gtk.Fixed.FixedChild w112 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.MarkerSize]));
		w112.X = 100;
		w112.Y = 640;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.markerSizeLabel = new global::Gtk.Label();
		this.markerSizeLabel.Name = "markerSizeLabel";
		this.markerSizeLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Marker Size</b>");
		this.markerSizeLabel.UseMarkup = true;
		this.patternLayout.Add(this.markerSizeLabel);
		global::Gtk.Fixed.FixedChild w113 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.markerSizeLabel]));
		w113.X = 5;
		w113.Y = 645;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternTop = new global::Gtk.SpinButton(-1280D, 1280D, 1D);
		this.patternTop.CanFocus = true;
		this.patternTop.Name = "patternTop";
		this.patternTop.Adjustment.PageIncrement = 10D;
		this.patternTop.ClimbRate = 1D;
		this.patternTop.Numeric = true;
		this.patternLayout.Add(this.patternTop);
		global::Gtk.Fixed.FixedChild w114 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternTop]));
		w114.X = 220;
		w114.Y = 570;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternTopLabel = new global::Gtk.Label();
		this.patternTopLabel.Name = "patternTopLabel";
		this.patternTopLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Top</b>");
		this.patternTopLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternTopLabel);
		global::Gtk.Fixed.FixedChild w115 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternTopLabel]));
		w115.X = 190;
		w115.Y = 575;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternLeft = new global::Gtk.SpinButton(-1280D, 1280D, 1D);
		this.patternLeft.CanFocus = true;
		this.patternLeft.Name = "patternLeft";
		this.patternLeft.Adjustment.PageIncrement = 10D;
		this.patternLeft.ClimbRate = 1D;
		this.patternLeft.Numeric = true;
		this.patternLayout.Add(this.patternLeft);
		global::Gtk.Fixed.FixedChild w116 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternLeft]));
		w116.X = 220;
		w116.Y = 605;
		// Container child patternLayout.Gtk.Fixed+FixedChild
		this.patternLeftLabel = new global::Gtk.Label();
		this.patternLeftLabel.Name = "patternLeftLabel";
		this.patternLeftLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Left</b>");
		this.patternLeftLabel.UseMarkup = true;
		this.patternLayout.Add(this.patternLeftLabel);
		global::Gtk.Fixed.FixedChild w117 = ((global::Gtk.Fixed.FixedChild)(this.patternLayout[this.patternLeftLabel]));
		w117.X = 185;
		w117.Y = 610;
		this.mainNoteBook.Add(this.patternLayout);
		global::Gtk.Notebook.NotebookChild w118 = ((global::Gtk.Notebook.NotebookChild)(this.mainNoteBook[this.patternLayout]));
		w118.Position = 1;
		// Notebook tab
		this.patternLabel = new global::Gtk.Label();
		this.patternLabel.Name = "patternLabel";
		this.patternLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Pattern");
		this.mainNoteBook.SetTabLabel(this.patternLayout, this.patternLabel);
		this.patternLabel.ShowAll();
		// Container child mainNoteBook.Gtk.Notebook+NotebookChild
		this.imageDetectLayout = new global::Gtk.Fixed();
		this.imageDetectLayout.Name = "imageDetectLayout";
		this.imageDetectLayout.HasWindow = false;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.ThresholdLabel = new global::Gtk.Label();
		this.ThresholdLabel.Name = "ThresholdLabel";
		this.ThresholdLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Threshold</b>");
		this.ThresholdLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.ThresholdLabel);
		global::Gtk.Fixed.FixedChild w119 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.ThresholdLabel]));
		w119.X = 20;
		w119.Y = 555;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.EdgeThresholdLabel = new global::Gtk.Label();
		this.EdgeThresholdLabel.Name = "EdgeThresholdLabel";
		this.EdgeThresholdLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Edge");
		this.EdgeThresholdLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.EdgeThresholdLabel);
		global::Gtk.Fixed.FixedChild w120 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.EdgeThresholdLabel]));
		w120.X = 33;
		w120.Y = 585;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.LinkingThresholdLabel = new global::Gtk.Label();
		this.LinkingThresholdLabel.Name = "LinkingThresholdLabel";
		this.LinkingThresholdLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Linking");
		this.LinkingThresholdLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.LinkingThresholdLabel);
		global::Gtk.Fixed.FixedChild w121 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.LinkingThresholdLabel]));
		w121.X = 22;
		w121.Y = 615;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.EdgeThreshold = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.EdgeThreshold.Name = "EdgeThreshold";
		this.EdgeThreshold.Adjustment.PageIncrement = 10D;
		this.EdgeThreshold.ClimbRate = 1D;
		this.EdgeThreshold.Numeric = true;
		this.imageDetectLayout.Add(this.EdgeThreshold);
		global::Gtk.Fixed.FixedChild w122 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.EdgeThreshold]));
		w122.X = 75;
		w122.Y = 580;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.LinkingThreshold = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.LinkingThreshold.Name = "LinkingThreshold";
		this.LinkingThreshold.Adjustment.PageIncrement = 10D;
		this.LinkingThreshold.ClimbRate = 1D;
		this.LinkingThreshold.Numeric = true;
		this.imageDetectLayout.Add(this.LinkingThreshold);
		global::Gtk.Fixed.FixedChild w123 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.LinkingThreshold]));
		w123.X = 75;
		w123.Y = 610;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MinAreaLabel = new global::Gtk.Label();
		this.MinAreaLabel.Name = "MinAreaLabel";
		this.MinAreaLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Min");
		this.MinAreaLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.MinAreaLabel);
		global::Gtk.Fixed.FixedChild w124 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MinAreaLabel]));
		w124.X = 370;
		w124.Y = 585;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MaxAreaLabel = new global::Gtk.Label();
		this.MaxAreaLabel.Name = "MaxAreaLabel";
		this.MaxAreaLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Max");
		this.MaxAreaLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.MaxAreaLabel);
		global::Gtk.Fixed.FixedChild w125 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MaxAreaLabel]));
		w125.X = 370;
		w125.Y = 615;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MinArea = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.MinArea.Name = "MinArea";
		this.MinArea.Adjustment.PageIncrement = 10D;
		this.MinArea.ClimbRate = 1D;
		this.MinArea.Numeric = true;
		this.imageDetectLayout.Add(this.MinArea);
		global::Gtk.Fixed.FixedChild w126 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MinArea]));
		w126.X = 405;
		w126.Y = 580;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MaxArea = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.MaxArea.Name = "MaxArea";
		this.MaxArea.Adjustment.PageIncrement = 10D;
		this.MaxArea.ClimbRate = 1D;
		this.MaxArea.Numeric = true;
		this.imageDetectLayout.Add(this.MaxArea);
		global::Gtk.Fixed.FixedChild w127 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MaxArea]));
		w127.X = 405;
		w127.Y = 610;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.CircleLabel = new global::Gtk.Label();
		this.CircleLabel.Name = "CircleLabel";
		this.CircleLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Circles</b>");
		this.CircleLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.CircleLabel);
		global::Gtk.Fixed.FixedChild w128 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.CircleLabel]));
		w128.X = 175;
		w128.Y = 555;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.HoughThresholdLabel = new global::Gtk.Label();
		this.HoughThresholdLabel.Name = "HoughThresholdLabel";
		this.HoughThresholdLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Hough");
		this.HoughThresholdLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.HoughThresholdLabel);
		global::Gtk.Fixed.FixedChild w129 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.HoughThresholdLabel]));
		w129.X = 25;
		w129.Y = 645;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MinRadiusLabel = new global::Gtk.Label();
		this.MinRadiusLabel.Name = "MinRadiusLabel";
		this.MinRadiusLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Min Radius");
		this.MinRadiusLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.MinRadiusLabel);
		global::Gtk.Fixed.FixedChild w130 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MinRadiusLabel]));
		w130.X = 175;
		w130.Y = 585;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MaxRadiusLabel = new global::Gtk.Label();
		this.MaxRadiusLabel.Name = "MaxRadiusLabel";
		this.MaxRadiusLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Max Radius");
		this.MaxRadiusLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.MaxRadiusLabel);
		global::Gtk.Fixed.FixedChild w131 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MaxRadiusLabel]));
		w131.X = 175;
		w131.Y = 615;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.HoughThreshold = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.HoughThreshold.Name = "HoughThreshold";
		this.HoughThreshold.Adjustment.PageIncrement = 10D;
		this.HoughThreshold.ClimbRate = 1D;
		this.HoughThreshold.Numeric = true;
		this.imageDetectLayout.Add(this.HoughThreshold);
		global::Gtk.Fixed.FixedChild w132 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.HoughThreshold]));
		w132.X = 75;
		w132.Y = 640;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MinRadius = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.MinRadius.Name = "MinRadius";
		this.MinRadius.Adjustment.PageIncrement = 10D;
		this.MinRadius.ClimbRate = 1D;
		this.MinRadius.Numeric = true;
		this.imageDetectLayout.Add(this.MinRadius);
		global::Gtk.Fixed.FixedChild w133 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MinRadius]));
		w133.X = 265;
		w133.Y = 580;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.MaxRadius = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.MaxRadius.Name = "MaxRadius";
		this.MaxRadius.Adjustment.PageIncrement = 10D;
		this.MaxRadius.ClimbRate = 1D;
		this.MaxRadius.Numeric = true;
		this.imageDetectLayout.Add(this.MaxRadius);
		global::Gtk.Fixed.FixedChild w134 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.MaxRadius]));
		w134.X = 265;
		w134.Y = 610;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.AreaLabel = new global::Gtk.Label();
		this.AreaLabel.Name = "AreaLabel";
		this.AreaLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Area</b>");
		this.AreaLabel.UseMarkup = true;
		this.imageDetectLayout.Add(this.AreaLabel);
		global::Gtk.Fixed.FixedChild w135 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.AreaLabel]));
		w135.X = 365;
		w135.Y = 555;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.CircleDistanceLabel = new global::Gtk.Label();
		this.CircleDistanceLabel.Name = "CircleDistanceLabel";
		this.CircleDistanceLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Distance");
		this.imageDetectLayout.Add(this.CircleDistanceLabel);
		global::Gtk.Fixed.FixedChild w136 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.CircleDistanceLabel]));
		w136.X = 195;
		w136.Y = 645;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.CircleDistance = new global::Gtk.SpinButton(0D, 1000000D, 1D);
		this.CircleDistance.CanFocus = true;
		this.CircleDistance.Name = "CircleDistance";
		this.CircleDistance.Adjustment.PageIncrement = 10D;
		this.CircleDistance.ClimbRate = 1D;
		this.CircleDistance.Numeric = true;
		this.imageDetectLayout.Add(this.CircleDistance);
		global::Gtk.Fixed.FixedChild w137 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.CircleDistance]));
		w137.X = 265;
		w137.Y = 640;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.DetectLayout = new global::Gtk.Notebook();
		this.DetectLayout.WidthRequest = 460;
		this.DetectLayout.HeightRequest = 130;
		this.DetectLayout.CanFocus = true;
		this.DetectLayout.Name = "DetectLayout";
		this.DetectLayout.CurrentPage = 0;
		this.DetectLayout.BorderWidth = ((uint)(3));
		// Container child DetectLayout.Gtk.Notebook+NotebookChild
		this.detectLayout = new global::Gtk.Fixed();
		this.detectLayout.Name = "detectLayout";
		this.detectLayout.HasWindow = false;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.edgeBlobsButton = new global::Gtk.Button();
		this.edgeBlobsButton.Name = "edgeBlobsButton";
		this.edgeBlobsButton.UseUnderline = true;
		this.edgeBlobsButton.Label = global::Mono.Unix.Catalog.GetString("Edge/Polygon");
		this.detectLayout.Add(this.edgeBlobsButton);
		global::Gtk.Fixed.FixedChild w138 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.edgeBlobsButton]));
		w138.X = 5;
		w138.Y = 5;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.houghCircleButton = new global::Gtk.Button();
		this.houghCircleButton.Name = "houghCircleButton";
		this.houghCircleButton.UseUnderline = true;
		this.houghCircleButton.FocusOnClick = false;
		this.houghCircleButton.Label = global::Mono.Unix.Catalog.GetString("Hough Circles");
		this.detectLayout.Add(this.houghCircleButton);
		global::Gtk.Fixed.FixedChild w139 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.houghCircleButton]));
		w139.X = 5;
		w139.Y = 35;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.blobsButton = new global::Gtk.Button();
		this.blobsButton.Name = "blobsButton";
		this.blobsButton.UseUnderline = true;
		this.blobsButton.FocusOnClick = false;
		this.blobsButton.Label = global::Mono.Unix.Catalog.GetString("Blobs");
		this.detectLayout.Add(this.blobsButton);
		global::Gtk.Fixed.FixedChild w140 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.blobsButton]));
		w140.X = 120;
		w140.Y = 5;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.simpleBlobsButton = new global::Gtk.Button();
		this.simpleBlobsButton.CanFocus = true;
		this.simpleBlobsButton.Name = "simpleBlobsButton";
		this.simpleBlobsButton.UseUnderline = true;
		this.simpleBlobsButton.FocusOnClick = false;
		this.simpleBlobsButton.Label = global::Mono.Unix.Catalog.GetString("Simple");
		this.detectLayout.Add(this.simpleBlobsButton);
		global::Gtk.Fixed.FixedChild w141 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.simpleBlobsButton]));
		w141.X = 120;
		w141.Y = 35;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.saveProcessedImageButton = new global::Gtk.Button();
		this.saveProcessedImageButton.Name = "saveProcessedImageButton";
		this.saveProcessedImageButton.UseUnderline = true;
		this.saveProcessedImageButton.FocusOnClick = false;
		this.saveProcessedImageButton.Label = global::Mono.Unix.Catalog.GetString("Save Processed Image");
		this.detectLayout.Add(this.saveProcessedImageButton);
		global::Gtk.Fixed.FixedChild w142 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.saveProcessedImageButton]));
		w142.X = 270;
		w142.Y = 35;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.saveBlobsButton = new global::Gtk.Button();
		this.saveBlobsButton.Name = "saveBlobsButton";
		this.saveBlobsButton.UseUnderline = true;
		this.saveBlobsButton.FocusOnClick = false;
		this.saveBlobsButton.Label = global::Mono.Unix.Catalog.GetString("Save Blobs");
		this.detectLayout.Add(this.saveBlobsButton);
		global::Gtk.Fixed.FixedChild w143 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.saveBlobsButton]));
		w143.X = 270;
		w143.Y = 5;
		// Container child detectLayout.Gtk.Fixed+FixedChild
		this.facesButton = new global::Gtk.Button();
		this.facesButton.Name = "facesButton";
		this.facesButton.UseUnderline = true;
		this.facesButton.FocusOnClick = false;
		this.facesButton.Label = global::Mono.Unix.Catalog.GetString("Faces");
		this.detectLayout.Add(this.facesButton);
		global::Gtk.Fixed.FixedChild w144 = ((global::Gtk.Fixed.FixedChild)(this.detectLayout[this.facesButton]));
		w144.X = 180;
		w144.Y = 5;
		this.DetectLayout.Add(this.detectLayout);
		// Notebook tab
		this.DetectLabel = new global::Gtk.Label();
		this.DetectLabel.Name = "DetectLabel";
		this.DetectLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Detect");
		this.DetectLayout.SetTabLabel(this.detectLayout, this.DetectLabel);
		this.DetectLabel.ShowAll();
		// Container child DetectLayout.Gtk.Notebook+NotebookChild
		this.preProcessLayout = new global::Gtk.Fixed();
		this.preProcessLayout.Name = "preProcessLayout";
		this.preProcessLayout.HasWindow = false;
		// Container child preProcessLayout.Gtk.Fixed+FixedChild
		this.DownUpSample = new global::Gtk.CheckButton();
		this.DownUpSample.Name = "DownUpSample";
		this.DownUpSample.Label = global::Mono.Unix.Catalog.GetString("Down/Up Sampling");
		this.DownUpSample.DrawIndicator = true;
		this.DownUpSample.UseUnderline = true;
		this.DownUpSample.FocusOnClick = false;
		this.preProcessLayout.Add(this.DownUpSample);
		global::Gtk.Fixed.FixedChild w146 = ((global::Gtk.Fixed.FixedChild)(this.preProcessLayout[this.DownUpSample]));
		w146.X = 5;
		w146.Y = 5;
		// Container child preProcessLayout.Gtk.Fixed+FixedChild
		this.InvertGray = new global::Gtk.CheckButton();
		this.InvertGray.CanFocus = true;
		this.InvertGray.Name = "InvertGray";
		this.InvertGray.Label = global::Mono.Unix.Catalog.GetString("Invert Gray");
		this.InvertGray.DrawIndicator = true;
		this.InvertGray.UseUnderline = true;
		this.preProcessLayout.Add(this.InvertGray);
		global::Gtk.Fixed.FixedChild w147 = ((global::Gtk.Fixed.FixedChild)(this.preProcessLayout[this.InvertGray]));
		w147.X = 5;
		w147.Y = 35;
		// Container child preProcessLayout.Gtk.Fixed+FixedChild
		this.SubtractBackground = new global::Gtk.CheckButton();
		this.SubtractBackground.Name = "SubtractBackground";
		this.SubtractBackground.Label = global::Mono.Unix.Catalog.GetString("Subtract Background");
		this.SubtractBackground.DrawIndicator = true;
		this.SubtractBackground.UseUnderline = true;
		this.SubtractBackground.FocusOnClick = false;
		this.preProcessLayout.Add(this.SubtractBackground);
		global::Gtk.Fixed.FixedChild w148 = ((global::Gtk.Fixed.FixedChild)(this.preProcessLayout[this.SubtractBackground]));
		w148.X = 170;
		w148.Y = 5;
		// Container child preProcessLayout.Gtk.Fixed+FixedChild
		this.Normalize = new global::Gtk.CheckButton();
		this.Normalize.Name = "Normalize";
		this.Normalize.Label = global::Mono.Unix.Catalog.GetString("Normalize");
		this.Normalize.DrawIndicator = true;
		this.Normalize.UseUnderline = true;
		this.Normalize.FocusOnClick = false;
		this.preProcessLayout.Add(this.Normalize);
		global::Gtk.Fixed.FixedChild w149 = ((global::Gtk.Fixed.FixedChild)(this.preProcessLayout[this.Normalize]));
		w149.X = 170;
		w149.Y = 30;
		this.DetectLayout.Add(this.preProcessLayout);
		global::Gtk.Notebook.NotebookChild w150 = ((global::Gtk.Notebook.NotebookChild)(this.DetectLayout[this.preProcessLayout]));
		w150.Position = 1;
		// Notebook tab
		this.DetectPreProcessLabel = new global::Gtk.Label();
		this.DetectPreProcessLabel.Name = "DetectPreProcessLabel";
		this.DetectPreProcessLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Pre-Process");
		this.DetectLayout.SetTabLabel(this.preProcessLayout, this.DetectPreProcessLabel);
		this.DetectPreProcessLabel.ShowAll();
		// Container child DetectLayout.Gtk.Notebook+NotebookChild
		this.gaussianFilterLayout = new global::Gtk.Fixed();
		this.gaussianFilterLayout.Name = "gaussianFilterLayout";
		this.gaussianFilterLayout.HasWindow = false;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilter = new global::Gtk.CheckButton();
		this.GaussianFilter.CanFocus = true;
		this.GaussianFilter.Name = "GaussianFilter";
		this.GaussianFilter.Label = global::Mono.Unix.Catalog.GetString("Apply Filter");
		this.GaussianFilter.DrawIndicator = true;
		this.GaussianFilter.UseUnderline = true;
		this.GaussianFilter.FocusOnClick = false;
		this.gaussianFilterLayout.Add(this.GaussianFilter);
		global::Gtk.Fixed.FixedChild w151 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilter]));
		w151.X = 5;
		w151.Y = 5;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.gaussianFilterKernelLabel = new global::Gtk.Label();
		this.gaussianFilterKernelLabel.Name = "gaussianFilterKernelLabel";
		this.gaussianFilterKernelLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Kernel</b>");
		this.gaussianFilterKernelLabel.UseMarkup = true;
		this.gaussianFilterLayout.Add(this.gaussianFilterKernelLabel);
		global::Gtk.Fixed.FixedChild w152 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.gaussianFilterKernelLabel]));
		w152.X = 130;
		w152.Y = 5;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.gaussianFilterWidthLabel = new global::Gtk.Label();
		this.gaussianFilterWidthLabel.Name = "gaussianFilterWidthLabel";
		this.gaussianFilterWidthLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Width");
		this.gaussianFilterLayout.Add(this.gaussianFilterWidthLabel);
		global::Gtk.Fixed.FixedChild w153 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.gaussianFilterWidthLabel]));
		w153.X = 130;
		w153.Y = 30;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.gaussianFilterHeightLabel = new global::Gtk.Label();
		this.gaussianFilterHeightLabel.Name = "gaussianFilterHeightLabel";
		this.gaussianFilterHeightLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Height");
		this.gaussianFilterLayout.Add(this.gaussianFilterHeightLabel);
		global::Gtk.Fixed.FixedChild w154 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.gaussianFilterHeightLabel]));
		w154.X = 130;
		w154.Y = 60;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterWidth = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.GaussianFilterWidth.Name = "GaussianFilterWidth";
		this.GaussianFilterWidth.Adjustment.PageIncrement = 10D;
		this.GaussianFilterWidth.ClimbRate = 1D;
		this.GaussianFilterWidth.Numeric = true;
		this.gaussianFilterLayout.Add(this.GaussianFilterWidth);
		global::Gtk.Fixed.FixedChild w155 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterWidth]));
		w155.X = 175;
		w155.Y = 25;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterHeight = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.GaussianFilterHeight.Name = "GaussianFilterHeight";
		this.GaussianFilterHeight.Adjustment.PageIncrement = 10D;
		this.GaussianFilterHeight.ClimbRate = 1D;
		this.GaussianFilterHeight.Numeric = true;
		this.gaussianFilterLayout.Add(this.GaussianFilterHeight);
		global::Gtk.Fixed.FixedChild w156 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterHeight]));
		w156.X = 175;
		w156.Y = 55;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterStdevLabel = new global::Gtk.Label();
		this.GaussianFilterStdevLabel.Name = "GaussianFilterStdevLabel";
		this.GaussianFilterStdevLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Standard Deviation</b>");
		this.GaussianFilterStdevLabel.UseMarkup = true;
		this.gaussianFilterLayout.Add(this.GaussianFilterStdevLabel);
		global::Gtk.Fixed.FixedChild w157 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterStdevLabel]));
		w157.X = 250;
		w157.Y = 5;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterStdevXLabel = new global::Gtk.Label();
		this.GaussianFilterStdevXLabel.Name = "GaussianFilterStdevXLabel";
		this.GaussianFilterStdevXLabel.LabelProp = global::Mono.Unix.Catalog.GetString("X");
		this.gaussianFilterLayout.Add(this.GaussianFilterStdevXLabel);
		global::Gtk.Fixed.FixedChild w158 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterStdevXLabel]));
		w158.X = 250;
		w158.Y = 30;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterStdevYLabel = new global::Gtk.Label();
		this.GaussianFilterStdevYLabel.Name = "GaussianFilterStdevYLabel";
		this.GaussianFilterStdevYLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Y");
		this.gaussianFilterLayout.Add(this.GaussianFilterStdevYLabel);
		global::Gtk.Fixed.FixedChild w159 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterStdevYLabel]));
		w159.X = 250;
		w159.Y = 60;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterStdevX = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.GaussianFilterStdevX.Name = "GaussianFilterStdevX";
		this.GaussianFilterStdevX.Adjustment.PageIncrement = 10D;
		this.GaussianFilterStdevX.ClimbRate = 0.1D;
		this.GaussianFilterStdevX.Digits = ((uint)(2));
		this.GaussianFilterStdevX.Numeric = true;
		this.gaussianFilterLayout.Add(this.GaussianFilterStdevX);
		global::Gtk.Fixed.FixedChild w160 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterStdevX]));
		w160.X = 270;
		w160.Y = 25;
		// Container child gaussianFilterLayout.Gtk.Fixed+FixedChild
		this.GaussianFilterStdevY = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.GaussianFilterStdevY.Name = "GaussianFilterStdevY";
		this.GaussianFilterStdevY.Adjustment.PageIncrement = 10D;
		this.GaussianFilterStdevY.ClimbRate = 0.1D;
		this.GaussianFilterStdevY.Digits = ((uint)(2));
		this.GaussianFilterStdevY.Numeric = true;
		this.gaussianFilterLayout.Add(this.GaussianFilterStdevY);
		global::Gtk.Fixed.FixedChild w161 = ((global::Gtk.Fixed.FixedChild)(this.gaussianFilterLayout[this.GaussianFilterStdevY]));
		w161.X = 270;
		w161.Y = 55;
		this.DetectLayout.Add(this.gaussianFilterLayout);
		global::Gtk.Notebook.NotebookChild w162 = ((global::Gtk.Notebook.NotebookChild)(this.DetectLayout[this.gaussianFilterLayout]));
		w162.Position = 2;
		// Notebook tab
		this.GuassianFilterLabel = new global::Gtk.Label();
		this.GuassianFilterLabel.Name = "GuassianFilterLabel";
		this.GuassianFilterLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Gaussian Filter");
		this.DetectLayout.SetTabLabel(this.gaussianFilterLayout, this.GuassianFilterLabel);
		this.GuassianFilterLabel.ShowAll();
		// Container child DetectLayout.Gtk.Notebook+NotebookChild
		this.markersLayout = new global::Gtk.Fixed();
		this.markersLayout.Name = "markersLayout";
		this.markersLayout.HasWindow = false;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.MarkerSizeLabel = new global::Gtk.Label();
		this.MarkerSizeLabel.Name = "MarkerSizeLabel";
		this.MarkerSizeLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Size</b>");
		this.MarkerSizeLabel.UseMarkup = true;
		this.markersLayout.Add(this.MarkerSizeLabel);
		global::Gtk.Fixed.FixedChild w163 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.MarkerSizeLabel]));
		w163.X = 5;
		w163.Y = 5;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.spinbutton13 = new global::Gtk.SpinButton(0D, 1000D, 1D);
		this.spinbutton13.CanFocus = true;
		this.spinbutton13.Name = "spinbutton13";
		this.spinbutton13.Adjustment.PageIncrement = 10D;
		this.spinbutton13.ClimbRate = 1D;
		this.spinbutton13.Numeric = true;
		this.markersLayout.Add(this.spinbutton13);
		global::Gtk.Fixed.FixedChild w164 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.spinbutton13]));
		w164.X = 5;
		w164.Y = 25;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.ColorsLabel = new global::Gtk.Label();
		this.ColorsLabel.Name = "ColorsLabel";
		this.ColorsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Colors</b>");
		this.ColorsLabel.UseMarkup = true;
		this.markersLayout.Add(this.ColorsLabel);
		global::Gtk.Fixed.FixedChild w165 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.ColorsLabel]));
		w165.X = 100;
		w165.Y = 5;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.SelectedColorLabel = new global::Gtk.Label();
		this.SelectedColorLabel.Name = "SelectedColorLabel";
		this.SelectedColorLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Selected");
		this.markersLayout.Add(this.SelectedColorLabel);
		global::Gtk.Fixed.FixedChild w166 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.SelectedColorLabel]));
		w166.X = 100;
		w166.Y = 55;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.MarkerColorLabel = new global::Gtk.Label();
		this.MarkerColorLabel.Name = "MarkerColorLabel";
		this.MarkerColorLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Default");
		this.markersLayout.Add(this.MarkerColorLabel);
		global::Gtk.Fixed.FixedChild w167 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.MarkerColorLabel]));
		w167.X = 100;
		w167.Y = 25;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.MarkerColor = new global::Gtk.ColorButton();
		this.MarkerColor.Events = ((global::Gdk.EventMask)(784));
		this.MarkerColor.Name = "MarkerColor";
		this.MarkerColor.FocusOnClick = false;
		this.markersLayout.Add(this.MarkerColor);
		global::Gtk.Fixed.FixedChild w168 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.MarkerColor]));
		w168.X = 165;
		w168.Y = 15;
		// Container child markersLayout.Gtk.Fixed+FixedChild
		this.SelectedColor = new global::Gtk.ColorButton();
		this.SelectedColor.Events = ((global::Gdk.EventMask)(784));
		this.SelectedColor.Name = "SelectedColor";
		this.SelectedColor.FocusOnClick = false;
		this.markersLayout.Add(this.SelectedColor);
		global::Gtk.Fixed.FixedChild w169 = ((global::Gtk.Fixed.FixedChild)(this.markersLayout[this.SelectedColor]));
		w169.X = 165;
		w169.Y = 50;
		this.DetectLayout.Add(this.markersLayout);
		global::Gtk.Notebook.NotebookChild w170 = ((global::Gtk.Notebook.NotebookChild)(this.DetectLayout[this.markersLayout]));
		w170.Position = 3;
		// Notebook tab
		this.MarkersLabel = new global::Gtk.Label();
		this.MarkersLabel.Name = "MarkersLabel";
		this.MarkersLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Markers");
		this.DetectLayout.SetTabLabel(this.markersLayout, this.MarkersLabel);
		this.MarkersLabel.ShowAll();
		// Container child DetectLayout.Gtk.Notebook+NotebookChild
		this.imageSettingsLayout = new global::Gtk.Fixed();
		this.imageSettingsLayout.Name = "imageSettingsLayout";
		this.imageSettingsLayout.HasWindow = false;
		// Container child imageSettingsLayout.Gtk.Fixed+FixedChild
		this.loadImageSettingsButton = new global::Gtk.Button();
		this.loadImageSettingsButton.Name = "loadImageSettingsButton";
		this.loadImageSettingsButton.UseUnderline = true;
		this.loadImageSettingsButton.FocusOnClick = false;
		this.loadImageSettingsButton.Label = global::Mono.Unix.Catalog.GetString("Load Settings");
		this.imageSettingsLayout.Add(this.loadImageSettingsButton);
		global::Gtk.Fixed.FixedChild w171 = ((global::Gtk.Fixed.FixedChild)(this.imageSettingsLayout[this.loadImageSettingsButton]));
		w171.X = 5;
		w171.Y = 5;
		// Container child imageSettingsLayout.Gtk.Fixed+FixedChild
		this.saveImageSettingsButton = new global::Gtk.Button();
		this.saveImageSettingsButton.Name = "saveImageSettingsButton";
		this.saveImageSettingsButton.UseUnderline = true;
		this.saveImageSettingsButton.FocusOnClick = false;
		this.saveImageSettingsButton.Label = global::Mono.Unix.Catalog.GetString("Save Settings");
		this.imageSettingsLayout.Add(this.saveImageSettingsButton);
		global::Gtk.Fixed.FixedChild w172 = ((global::Gtk.Fixed.FixedChild)(this.imageSettingsLayout[this.saveImageSettingsButton]));
		w172.X = 5;
		w172.Y = 35;
		// Container child imageSettingsLayout.Gtk.Fixed+FixedChild
		this.detectSettingsLabel = new global::Gtk.Label();
		this.detectSettingsLabel.Name = "detectSettingsLabel";
		this.detectSettingsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Load / Save detection settings");
		this.imageSettingsLayout.Add(this.detectSettingsLabel);
		global::Gtk.Fixed.FixedChild w173 = ((global::Gtk.Fixed.FixedChild)(this.imageSettingsLayout[this.detectSettingsLabel]));
		w173.X = 7;
		w173.Y = 68;
		this.DetectLayout.Add(this.imageSettingsLayout);
		global::Gtk.Notebook.NotebookChild w174 = ((global::Gtk.Notebook.NotebookChild)(this.DetectLayout[this.imageSettingsLayout]));
		w174.Position = 4;
		// Notebook tab
		this.ImageSettingsLabel = new global::Gtk.Label();
		this.ImageSettingsLabel.Name = "ImageSettingsLabel";
		this.ImageSettingsLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Settings");
		this.DetectLayout.SetTabLabel(this.imageSettingsLayout, this.ImageSettingsLabel);
		this.ImageSettingsLabel.ShowAll();
		this.imageDetectLayout.Add(this.DetectLayout);
		global::Gtk.Fixed.FixedChild w175 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.DetectLayout]));
		w175.X = 500;
		w175.Y = 550;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.dpLabel = new global::Gtk.Label();
		this.dpLabel.Name = "dpLabel";
		this.dpLabel.LabelProp = global::Mono.Unix.Catalog.GetString("dp");
		this.imageDetectLayout.Add(this.dpLabel);
		global::Gtk.Fixed.FixedChild w176 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.dpLabel]));
		w176.X = 380;
		w176.Y = 645;
		// Container child imageDetectLayout.Gtk.Fixed+FixedChild
		this.dp = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.dp.Name = "dp";
		this.dp.Adjustment.PageIncrement = 10D;
		this.dp.ClimbRate = 0.1D;
		this.dp.Digits = ((uint)(2));
		this.dp.Numeric = true;
		this.imageDetectLayout.Add(this.dp);
		global::Gtk.Fixed.FixedChild w177 = ((global::Gtk.Fixed.FixedChild)(this.imageDetectLayout[this.dp]));
		w177.X = 405;
		w177.Y = 640;
		this.mainNoteBook.Add(this.imageDetectLayout);
		global::Gtk.Notebook.NotebookChild w178 = ((global::Gtk.Notebook.NotebookChild)(this.mainNoteBook[this.imageDetectLayout]));
		w178.Position = 2;
		// Notebook tab
		this.ImageDetectLabel = new global::Gtk.Label();
		this.ImageDetectLabel.Name = "ImageDetectLabel";
		this.ImageDetectLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Detect");
		this.mainNoteBook.SetTabLabel(this.imageDetectLayout, this.ImageDetectLabel);
		this.ImageDetectLabel.ShowAll();
		this.mainLayout.Add(this.mainNoteBook);
		global::Gtk.Fixed.FixedChild w179 = ((global::Gtk.Fixed.FixedChild)(this.mainLayout[this.mainNoteBook]));
		w179.X = 20;
		w179.Y = 20;
		this.Add(this.mainLayout);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.KeyPressEvent += new global::Gtk.KeyPressEventHandler(this.OnKeyPressEvent);
		this.KeyReleaseEvent += new global::Gtk.KeyReleaseEventHandler(this.OnKeyReleaseEvent);
		this.mainNoteBook.SwitchPage += new global::Gtk.SwitchPageHandler(this.OnMainNoteBookSwitchPage);
		this.cameraImageEvent.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler(this.OnCameraImageEventButtonPressEvent);
		this.cameraImageEvent.ButtonReleaseEvent += new global::Gtk.ButtonReleaseEventHandler(this.OnCameraImageEventButtonReleaseEvent);
		this.cameraImageEvent.MotionNotifyEvent += new global::Gtk.MotionNotifyEventHandler(this.OnCameraImageEventMotionNotifyEvent);
		this.grabButton.Clicked += new global::System.EventHandler(this.GrabButtonClicked);
		this.stopButton.Clicked += new global::System.EventHandler(this.StopButtonClicked);
		this.restartButton.Clicked += new global::System.EventHandler(this.OnRestartButtonClicked);
		this.clearButton.Clicked += new global::System.EventHandler(this.OnClearButtonClicked);
		this.ellipseBoxToggle.Toggled += new global::System.EventHandler(this.OnToggleEllipseBoxToggled);
		this.widthScale.ValueChanged += new global::System.EventHandler(this.ScaleResizeEvent);
		this.heightScale.ValueChanged += new global::System.EventHandler(this.ScaleResizeEvent);
		this.widthScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericResizeEvent);
		this.heightScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericResizeEvent);
		this.dxScale.ValueChanged += new global::System.EventHandler(this.ScaleMoveEvent);
		this.dxScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericMoveEvent);
		this.dyScale.ValueChanged += new global::System.EventHandler(this.ScaleMoveEvent);
		this.dyScaleNumeric.ValueChanged += new global::System.EventHandler(this.NumericMoveEvent);
		this.closeEditButton.Clicked += new global::System.EventHandler(this.OnCloseEditButtonClicked);
		this.regionEnabled.Toggled += new global::System.EventHandler(this.OnRegionEnabledToggled);
		this.saveButton.Clicked += new global::System.EventHandler(this.OnSaveButtonClicked);
		this.cameraFlipX.Toggled += new global::System.EventHandler(this.FlipCamera);
		this.cameraFlipY.Toggled += new global::System.EventHandler(this.FlipCamera);
		this.patternScaleX.ValueChanged += new global::System.EventHandler(this.PatternScaleChanged);
		this.patternScaleY.ValueChanged += new global::System.EventHandler(this.PatternScaleChanged);
		this.resetScaleButton.Clicked += new global::System.EventHandler(this.OnResetScaleButtonClicked);
		this.patternScaleXNumeric.ValueChanged += new global::System.EventHandler(this.PatternScaleNumericChanged);
		this.patternScaleYNumeric.ValueChanged += new global::System.EventHandler(this.PatternScaleNumericChanged);
		this.patternOffsetX.ValueChanged += new global::System.EventHandler(this.PatternOffsetChanged);
		this.patternOffsetY.ValueChanged += new global::System.EventHandler(this.PatternOffsetChanged);
		this.patternOffsetYNumeric.ValueChanged += new global::System.EventHandler(this.PatternOffsetNumericChanged);
		this.patternOffsetXNumeric.ValueChanged += new global::System.EventHandler(this.PatternOffsetNumericChanged);
		this.resetOffsetButton.Clicked += new global::System.EventHandler(this.OnResetOffsetButtonClicked);
		this.grayLevelScale.ValueChanged += new global::System.EventHandler(this.OnGrayLevelScaleValueChanged);
		this.grayLevelNumeric.ValueChanged += new global::System.EventHandler(this.OnGrayLevelNumericValueChanged);
		this.backgroundLevelScale.ValueChanged += new global::System.EventHandler(this.OnBackgroundLevelScaleValueChanged);
		this.backgroundLevelNumeric.ValueChanged += new global::System.EventHandler(this.OnBackgroundLevelNumericValueChanged);
		this.FlipX.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.FlipY.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.Invert.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.patternPreviewMode.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.patternNotebook.SwitchPage += new global::Gtk.SwitchPageHandler(this.OnPatternNotebookSwitchPage);
		this.Cross.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.Plus.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.Grating.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.TL.Toggled += new global::System.EventHandler(this.GratingSettingsChanged);
		this.TR.Toggled += new global::System.EventHandler(this.GratingSettingsChanged);
		this.BL.Toggled += new global::System.EventHandler(this.GratingSettingsChanged);
		this.BR.Toggled += new global::System.EventHandler(this.GratingSettingsChanged);
		this.PeriodX.ValueChanged += new global::System.EventHandler(this.GratingSettingsChanged);
		this.PeriodY.ValueChanged += new global::System.EventHandler(this.GratingSettingsChanged);
		this.FillX.ValueChanged += new global::System.EventHandler(this.GratingSettingsChanged);
		this.FillY.ValueChanged += new global::System.EventHandler(this.GratingSettingsChanged);
		this.gratingXYLock.Toggled += new global::System.EventHandler(this.OnGratingXYLockToggled);
		this.Ring.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.FillRing.Toggled += new global::System.EventHandler(this.UpdateRingSettings);
		this.ringDiameterScale.ValueChanged += new global::System.EventHandler(this.UpdateRingSettings);
		this.ringDiameterNumeric.ValueChanged += new global::System.EventHandler(this.UpdateRingSettingsNumeric);
		this.aspectX.ValueChanged += new global::System.EventHandler(this.UpdateAspectRatio);
		this.aspectY.ValueChanged += new global::System.EventHandler(this.UpdateAspectRatio);
		this.Rings.ValueChanged += new global::System.EventHandler(this.UpdateRingSettings);
		this.RingPeriod.ValueChanged += new global::System.EventHandler(this.UpdateRingSettings);
		this.Box.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.FillBox.Toggled += new global::System.EventHandler(this.UpdateBoxSettings);
		this.boxWidthScale.ValueChanged += new global::System.EventHandler(this.UpdateBoxSettings);
		this.boxWidthNumeric.ValueChanged += new global::System.EventHandler(this.UpdateBoxSettingsNumeric);
		this.Boxes.ValueChanged += new global::System.EventHandler(this.UpdateBoxSettings);
		this.BoxPeriod.ValueChanged += new global::System.EventHandler(this.UpdateBoxSettings);
		this.loadPatternButton.Clicked += new global::System.EventHandler(this.OnLoadPatternButtonClicked);
		this.savePatternButton.Clicked += new global::System.EventHandler(this.OnSavePatternButtonClicked);
		this.Custom.Toggled += new global::System.EventHandler(this.UpdatePatternEvent);
		this.clearPatternButton.Clicked += new global::System.EventHandler(this.OnClearPatternButtonClicked);
		this.loadSettingsButton.Clicked += new global::System.EventHandler(this.OnLoadSettingsButtonClicked);
		this.saveSettingsButton.Clicked += new global::System.EventHandler(this.OnSaveSettingsButtonClicked);
		this.patternWidth.ValueChanged += new global::System.EventHandler(this.ResizePatternWindow);
		this.patternHeight.ValueChanged += new global::System.EventHandler(this.ResizePatternWindow);
		this.MarkerSize.ValueChanged += new global::System.EventHandler(this.MarkerSizeUpdate);
		this.patternTop.ValueChanged += new global::System.EventHandler(this.PatternWindowMoved);
		this.patternLeft.ValueChanged += new global::System.EventHandler(this.PatternWindowMoved);
		this.EdgeThreshold.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.LinkingThreshold.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.MinArea.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.MaxArea.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.HoughThreshold.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.MinRadius.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.MaxRadius.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.CircleDistance.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.edgeBlobsButton.Clicked += new global::System.EventHandler(this.OnEdgeBlobsButtonClicked);
		this.houghCircleButton.Clicked += new global::System.EventHandler(this.OnHoughCircleButtonClicked);
		this.blobsButton.Clicked += new global::System.EventHandler(this.OnBlobsButtonClicked);
		this.simpleBlobsButton.Clicked += new global::System.EventHandler(this.OnSimpleBlobsButtonClicked);
		this.saveProcessedImageButton.Clicked += new global::System.EventHandler(this.OnSaveProcessedImageButtonClicked);
		this.saveBlobsButton.Clicked += new global::System.EventHandler(this.OnSaveBlobsButtonClicked);
		this.facesButton.Clicked += new global::System.EventHandler(this.OnFacesButtonClicked);
		this.DownUpSample.Toggled += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.InvertGray.Toggled += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.SubtractBackground.Toggled += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.Normalize.Toggled += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.GaussianFilter.Toggled += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.GaussianFilterWidth.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.GaussianFilterHeight.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.GaussianFilterStdevX.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.GaussianFilterStdevY.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.spinbutton13.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.MarkerColor.ColorSet += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.SelectedColor.ColorSet += new global::System.EventHandler(this.UpdateDetectorSettings);
		this.loadImageSettingsButton.Clicked += new global::System.EventHandler(this.OnLoadSettingsButtonClicked);
		this.saveImageSettingsButton.Clicked += new global::System.EventHandler(this.OnSaveSettingsButtonClicked);
		this.dp.ValueChanged += new global::System.EventHandler(this.UpdateDetectorSettings);
	}
}
